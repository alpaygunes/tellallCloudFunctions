{"version":3,"sources":["webpack:///src/app/pages/edit-message-brochure/edit-message-brochure-routing.module.ts","webpack:///src/app/pages/edit-message-brochure/edit-message-brochure.page.scss","webpack:///src/app/pages/edit-message-brochure/edit-message-brochure.module.ts","webpack:///src/app/pages/edit-message-brochure/edit-message-brochure.page.html","webpack:///src/app/pages/edit-message-brochure/edit-message-brochure.page.ts"],"names":["routes","path","component","EditMessageBrochurePageRoutingModule","imports","forChild","exports","EditMessageBrochurePageModule","declarations","EditMessageBrochurePage","route","location","loadingController","authService","toastController","messageService","showedElement","showAddCategoriButtonForFirstInput","isNew","brochure","message","cid","snapshot","paramMap","get","mid","getMessage","getMessageById","ref","then","data","length","back","ev","detail","complete","categories","splice","to","from","edited_brochure_category","pages","cat","id","Math","random","toString","substring","forEach","v","i","title","trim","undefined","push","save","page","images","catid","edited_brochure_page","BU","changeHandler","event","target","files","file","reader","FileReader","readAsDataURL","onload","revent","img","Image","oimg","resizeCanvas","document","createElement","ctx","getContext","width","height","drawImage","base64data","toDataURL","pageImage","File","src","result","onerror","error","console","err","setTimeout","imgInputElm","type","setAttribute","addEventListener","click","create","duration","loading","present","uid","USER","created_at","FieldValue","serverTimestamp","saveBrochure","res","color","toast","dismiss","selector","template"],"mappings":"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","file":"pages-edit-message-brochure-edit-message-brochure-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditMessageBrochurePage } from './edit-message-brochure.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditMessageBrochurePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditMessageBrochurePageRoutingModule {}\n","export default \"/*\\nion-thumbnail{\\n    display: block;\\n    float: left;\\n    padding: 7px;\\n    width: 100%;\\n    height: auto;\\n    border: 1px solid #ccc;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2VkaXQtbWVzc2FnZS1icm9jaHVyZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0NBQUEiLCJmaWxlIjoiZWRpdC1tZXNzYWdlLWJyb2NodXJlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5pb24tdGh1bWJuYWlse1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmc6IDdweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4qL1xuICJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditMessageBrochurePageRoutingModule } from './edit-message-brochure-routing.module';\n\nimport { EditMessageBrochurePage } from './edit-message-brochure.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditMessageBrochurePageRoutingModule\n  ],\n  declarations: [EditMessageBrochurePage]\n})\nexport class EditMessageBrochurePageModule {}\n","export default \"<ion-toolbar > \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"back()\\\" *ngIf=\\\"showedElement == 'cat_list'\\\"> \\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon> \\n        </ion-button>\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"showedElement='cat_list'\\\" *ngIf=\\\"showedElement == 'edit_cat'\\\">\\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n        </ion-button> \\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"showedElement='cat_list'\\\" *ngIf=\\\"showedElement == 'list_page'\\\">\\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n        </ion-button>\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"showedElement='list_page'\\\" *ngIf=\\\"showedElement == 'edit_page'\\\">\\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n        </ion-button> \\n        <ion-title *ngIf=\\\"showedElement == 'edit_page'\\\">Sayfa Düzenle</ion-title>\\n        <ion-title *ngIf=\\\"showedElement == 'list_page'\\\">Sayfa Listesi</ion-title>\\n        <ion-title *ngIf=\\\"showedElement == 'edit_cat'\\\">Bölüm Düzenle</ion-title>\\n        <ion-title *ngIf=\\\"showedElement == 'cat_list'\\\">Broşür Düzenle</ion-title>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ion-toolbar> \\n\\n<ion-content> \\n  <!-- //////////////////////////  BROŞÜR ADI    ///////////////////////////  -->\\n  <ion-grid fixed *ngIf=\\\"showedElement == 'cat_list'\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-label>Broşür Başlığı</ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Etkili bir başlık bulun\\\" [(ngModel)]='brochure.title'></ion-input>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-label>Alt Başlık</ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\"> \\n        <ion-input type=\\\"text\\\" [(ngModel)]='brochure.subtitle'></ion-input>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- //////////////////////////  SHOW CATEGORY LİST ///////////////////////////// --> \\n  <div *ngIf=\\\"showedElement == 'cat_list' && brochure.categories.length\\\" style=\\\"margin-top: 50px;\\\" >\\n    <ion-item lines=\\\"none\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"bookmark-outline\\\"></ion-icon>\\n      <ion-label>Bölümler</ion-label>\\n    </ion-item> \\n    <!-- sıradaki kategori-->\\n    <ion-reorder-group (ionItemReorder)=\\\"doReorderCat($event)\\\" disabled=\\\"false\\\"> \\n      <ion-item-sliding *ngFor=\\\"let categori of brochure.categories\\\">\\n        <ion-card> \\n          <ion-card-content>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>{{categori.title}}</ion-label>\\n              <ion-reorder slot=\\\"end\\\" ></ion-reorder>\\n            </ion-item> \\n          </ion-card-content>\\n          <ion-row>\\n            <ion-col size=\\\"2\\\"> \\n            </ion-col>\\n            <ion-col size=\\\"4\\\" (click)=\\\"deleteCategory(categori)\\\">\\n              <ion-icon   name=\\\"trash-outline\\\"></ion-icon> \\n            </ion-col>\\n            <ion-col size=\\\"4\\\" (click)=\\\"editCategory(categori)\\\">\\n              <ion-icon   name=\\\"create-outline\\\"></ion-icon> \\n            </ion-col>\\n            <ion-col size=\\\"2\\\"  (click)=\\\"listPage(categori)\\\">\\n              <ion-icon   name=\\\"book-outline\\\"></ion-icon> \\n            </ion-col> \\n          </ion-row>\\n        </ion-card>\\n      </ion-item-sliding>\\n    </ion-reorder-group><!-- sıradaki kategori END-->  \\n  </div>\\n  <ion-button (click)=\\\"addCategori()\\\"  fill=\\\"clear\\\" size=\\\"small\\\" expand=\\\"full\\\" *ngIf=\\\"(brochure.categories.length || showAddCategoriButtonForFirstInput) && showedElement == 'cat_list'\\\"> \\n    Bölüm Ekle\\n  </ion-button> \\n\\n\\n  <!-- //////////////////////////  EDİT CATEGORY ///////////////////////////// --> \\n  <section *ngIf=\\\"showedElement == 'edit_cat'\\\">\\n    <ion-grid fixed >\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Bölüm Başlığı</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"edited_brochure_category.title\\\" placeholder=\\\"Kategori Adı Yazın\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n  \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Alt Başlık</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"edited_brochure_category.subtitle\\\"  placeholder=\\\"Alt Başlık Yazın\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n \\n\\n  <!-- //////////////////////////  LIST PAGE ///////////////////////////// -->\\n  <section *ngIf=\\\"showedElement == 'list_page'\\\">  \\n    <ion-icon  name=\\\"book-outline\\\" style=\\\"font-size: 50px;margin-left: auto;margin-right:auto; display: block;margin-top: 50px;margin-bottom: 20px;\\\"></ion-icon>\\n    <ion-reorder-group (ionItemReorder)=\\\"doReorderPage($event)\\\" disabled=\\\"false\\\"> \\n      <ion-item-sliding *ngFor=\\\"let page of edited_brochure_category.pages\\\">\\n        <ion-item (click)=\\\"editPage(page)\\\" lines=\\\"full\\\">\\n          <ion-label>{{page.title}}</ion-label>\\n          <ion-reorder slot=\\\"end\\\"></ion-reorder>  \\n        </ion-item>\\n        <ion-item-options side=\\\"start\\\">\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"deletePage(page)\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n          </ion-item-option> \\n        </ion-item-options>\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option color=\\\"secondary\\\" (click)=\\\"editPage(page)\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"create-outline\\\"></ion-icon>\\n          </ion-item-option> \\n        </ion-item-options>\\n      </ion-item-sliding> \\n    </ion-reorder-group>      \\n    <ion-button (click)=\\\"addPage()\\\" expand=\\\"full\\\" fill=\\\"clear\\\" size=\\\"small\\\" > \\n      Sayfa Ekle\\n    </ion-button> \\n  </section> \\n \\n\\n  <!-- //////////////////////////  EDİT PAGE /////////////////////////////  -->\\n  <section *ngIf=\\\"showedElement == 'edit_page'\\\">\\n    <ion-grid fixed>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label >Sayfa Başlığı</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row> \\n        <ion-col size=\\\"12\\\"> \\n          <ion-input type=\\\"text\\\" placeholder=\\\"Sayfa Başlığı\\\" [(ngModel)]=\\\"edited_brochure_page.title\\\"></ion-input>\\n        </ion-col>\\n      </ion-row> \\n      <ion-row>\\n        <ion-col size=\\\"12\\\"> \\n            <ion-label>Alt Başlık</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Alt Başlık\\\" [(ngModel)]=\\\"edited_brochure_page.subtitle\\\"></ion-input>\\n        </ion-col>\\n      </ion-row> \\n      <ion-row>\\n        <ion-col size=\\\"12\\\"> \\n            <ion-label position=\\\"floating\\\">Açıklama</ion-label>\\n        </ion-col>\\n      </ion-row> \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-textarea rows=\\\"15\\\" id=\\\"ag-desicription\\\" placeholder=\\\"Ürün açıklamasını yazın\\\" \\n                        [(ngModel)]=\\\"edited_brochure_page.description\\\" color=\\\"medium\\\"></ion-textarea>\\n        </ion-col>\\n      </ion-row> \\n    </ion-grid>\\n\\n    <ion-button (click)=\\\"addImage()\\\" expand=\\\"full\\\" fill=\\\"clear\\\"> \\n      Resim Ekle\\n    </ion-button>   \\n    <ion-card *ngFor=\\\"let img of edited_brochure_page.images\\\"> \\n      <ion-card-content>   \\n          <img *ngIf=\\\"img.base64data\\\" src=\\\"{{img.base64data}}\\\"/>\\n          <img *ngIf=\\\"img.url\\\" src=\\\"{{img.url}}\\\" />         \\n        <ion-button (click)=\\\"removeImage(img)\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n          Delete\\n        </ion-button>\\n      </ion-card-content> \\n    </ion-card>\\n  \\n\\n  </section>\\n\\n\\n\\n</ion-content>\\n\\n<!--    BROŞÜRE kaydet düğmesi                -->\\n<ion-button (click)=\\\"save()\\\" *ngIf=\\\"showedElement=='cat_list'\\\"   expand=\\\"full\\\"  color=\\\"primary\\\" >\\n  Broşürü Kaydet\\n</ion-button> \\n\\n\\n<!--      bölüm kaydet düğmesi                -->\\n<ion-button (click)=\\\"saveCategory()\\\" *ngIf=\\\"showedElement == 'edit_cat'\\\"  expand=\\\"full\\\" color=\\\"secondary\\\"  >\\n  Kaydet\\n</ion-button> \\n\\n<!--      sayfa kaydet düğmesi                -->\\n<ion-button (click)=\\\"savePage()\\\" *ngIf=\\\"showedElement == 'edit_page'\\\"  expand=\\\"full\\\" color=\\\"secondary\\\">\\n  Tamam\\n</ion-button> \";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'; \nimport { Location } from '@angular/common';\nimport { ItemReorderEventDetail } from '@ionic/core';\nimport { Brochure, BrochureCategory, BrochurePage, BroshurePageImage } from 'src/app/objects/brochure.model'; \nimport { MessageService } from 'src/app/services/message.service'; \nimport { Message } from 'src/app/objects/message.model'; \nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-edit-message-brochure',\n  templateUrl: './edit-message-brochure.page.html',\n  styleUrls: ['./edit-message-brochure.page.scss'],\n})\nexport class EditMessageBrochurePage implements OnInit {\n  cid: string;\n  mid: string;\n  showedElement:string='cat_list'\n  brochure:Brochure; \n  edited_brochure_category:BrochureCategory;\n  edited_brochure_page: BrochurePage; \n  message:Message;\n  imgInputElm          : HTMLInputElement;\n  showAddCategoriButtonForFirstInput:boolean = false;\n  isNew: boolean = true;\n\n  constructor(public route: ActivatedRoute,\n              public location:Location,\n              private loadingController:LoadingController,\n              public authService:AuthService,\n              private toastController:ToastController,\n              private messageService:MessageService,\n              ) { \n                this.brochure = new Brochure();\n                this.message  = new Message(); \n              }\n\n  ngOnInit() {\n    this.cid  = this.route.snapshot.paramMap.get('cid');\n    this.mid  = this.route.snapshot.paramMap.get('mid');\n    this.getMessage()\n  }\n\n  getMessage(){ \n    if(this.mid){\n      this.messageService.getMessageById(this.cid,this.mid).ref.get().then((snapshot)=>{\n        this.message  = <Message>snapshot.data()\n        this.brochure = this.message.brochure; \n        this.showAddCategoriButtonForFirstInput = snapshot.data.length ?true:false ;\n      })\n    }\n  }\n\n  back(){\n    this.location.back();\n  }\n\n  doReorderCat(ev: CustomEvent<ItemReorderEventDetail>){\n    ev.detail.complete(true)\n    this.brochure.categories.splice(ev.detail.to, 0, this.brochure.categories.splice(ev.detail.from, 1)[0]);\n\n  }\n\n  doReorderPage(ev: CustomEvent<ItemReorderEventDetail>){\n    ev.detail.complete(true)\n    this.edited_brochure_category.pages.splice(ev.detail.to, 0, this.edited_brochure_category.pages.splice(ev.detail.from, 1)[0]);\n  }\n\n  addCategori(){\n    let cat                        = new BrochureCategory()\n    cat.id                         = Math.random().toString(36).substring(7); \n    this.edited_brochure_category  = cat;\n    this.showedElement             = \"edit_cat\"\n    this.isNew = true;\n    \n  }\n\n  deleteCategory(cat:BrochureCategory){ \n    debugger\n    this.brochure.categories.forEach((v,i)=>{\n      if(v.id==cat.id){\n        cat.pages = [];\n        this.brochure.categories.splice(i, 1);\n      }\n    })\n  }\n\n  editCategory(cat:BrochureCategory){\n    this.edited_brochure_category = cat;\n    this.showedElement            = \"edit_cat\"\n    this.isNew = false;\n  }\n\n  saveCategory(){\n    debugger\n    this.showedElement = 'cat_list';\n    if(this.edited_brochure_category.title?.trim() != '' && this.edited_brochure_category.title !== undefined && this.isNew){\n      this.brochure.categories.push(this.edited_brochure_category)\n      this.save()\n    }\n    this.isNew = false; \n  }\n\n  addPage(){ \n    let page                         = new BrochurePage();\n    page.images                      = [];\n    page.id                          = Math.random().toString(36).substring(7);\n    page.catid                       = this.edited_brochure_category.id;  \n    this.edited_brochure_page        = page;\n    this.showedElement               = \"edit_page\";\n    this.isNew = true; \n  }\n\n  editPage(page:BrochurePage){\n    this.edited_brochure_page        = page;\n    this.showedElement               = \"edit_page\";\n    this.isNew = false;\n  }\n\n  savePage(){\n    if(this.edited_brochure_page.title?.trim() != '' && this.edited_brochure_page.title !== undefined && this.isNew){\n      this.edited_brochure_category.pages.push(this.edited_brochure_page)\n      this.save();\n    } \n    this.isNew = false; \n    this.showedElement = 'list_page';\n  }\n\n  listPage(cat:BrochureCategory){  \n    this.edited_brochure_category    = cat;\n    this.showedElement               = \"list_page\"\n  }\n\n  deletePage(page:BrochurePage){ \n    this.edited_brochure_category.pages.forEach((v,i)=>{\n      if(v.id==page.id){\n        this.edited_brochure_category.pages.splice(i, 1);\n      }\n    }) \n  }\n\n  addImage(){\n    let BU = this; \n    let changeHandler =function (event:any){\n      try{\n       for(let file of event.target.files) {          \n          const reader    = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload   = (revent) => {\n            const img   = new Image()\n            img.onload  = function(oimg){\n              let resizeCanvas    = document.createElement(\"canvas\");\n              var ctx             = resizeCanvas.getContext(\"2d\");\n              resizeCanvas.width  = 512;\n              resizeCanvas.height = img.height*(512/img.width);\n              ctx.drawImage(img, 0, 0, resizeCanvas.width, resizeCanvas.height); \n              const base64data  = resizeCanvas.toDataURL('image/jpeg', 0.8);\n              const pageImage   = new BroshurePageImage();\n              pageImage.id      = Math.random().toString(36).substring(20);\n              pageImage.base64data     = base64data;\n              pageImage.File    = file;\n              BU.edited_brochure_page.images.push(pageImage)\n            }\n            img.src = <string>revent.target.result\n          };\n          reader.onerror  = error => {\n            console.error(\"Resim base64 yapılamadı \" + error)\n          };\n        }        \n      }catch(err){\n        console.error(\"Resim alınırken hata oldu \" + err)\n      }\n    }\n    setTimeout(()=>{\n      this.imgInputElm       = document.createElement('input');\n      this.imgInputElm.type  = \"file\";\n      this.imgInputElm.setAttribute(\"multiple\",\"true\");\n      this.imgInputElm.setAttribute(\"accept\",\"image/*\"); \n      this.imgInputElm.addEventListener('change',changeHandler);\n      this.imgInputElm.click();\n    },1)\n  }\n\n  removeImage(img:BroshurePageImage){\n    this.edited_brochure_page.images.forEach((v,i)=>{\n      if(v.File==img.File){\n        this.edited_brochure_page.images.splice(i, 1);\n      }\n    })\n  }\n\n  async save(){ \n    const loading     = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 10000\n    }); \n    await loading.present();    \n    this.message.brochure       = this.brochure\n    this.message.type           = \"brochure\"\n    this.message.uid            = this.authService.USER.uid;\n    if(!this.mid){\n      this.message.created_at   = firebase.firestore.FieldValue.serverTimestamp();\n    }else{\n      this.message.id           = this.mid;\n    }\n     \n    this.messageService.saveBrochure(this.message,this.cid).then(async (res)=>{ \n      if(res){\n        this.mid = res.id\n      }\n      const toast = await this.toastController.create({\n        color: 'success',\n        message: \"Kayıt işlemi tamamlandı\",\n        duration: 4000\n      });\n      toast.present();\n      await loading.dismiss();\n      this.showAddCategoriButtonForFirstInput = true;\n    })\n  }\n \n}"]}