{"version":3,"sources":["webpack:///src/app/pages/order-details/order-details.page.html","webpack:///src/app/pages/order-details/order-details-routing.module.ts","webpack:///src/app/pages/order-details/order-details.page.scss","webpack:///src/app/pages/order-details/order-details.page.ts","webpack:///src/app/pages/order-details/order-details.module.ts"],"names":["routes","path","component","OrderDetailsPageRoutingModule","imports","forChild","exports","OrderDetailsPage","route","location","orderService","router","update_btn_show","queryParams","subscribe","params","getCurrentNavigation","extras","state","order","cid","orderStatus","cart_item","getFoodTotalPrice","getOrderPrice","updateOrderStatus","id","status","then","back","event","selector","template","OrderDetailsPageModule","declarations"],"mappings":"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","file":"pages-order-details-order-details-module-es5.js","sourcesContent":["export default \"<ion-toolbar> \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-buttons  (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\"c></ion-icon>\\n      </ion-buttons>\\n      <ion-title >Sipariş Detayları</ion-title>\\n    </ion-tab-bar> \\n  </ion-tabs>\\n</ion-toolbar>\\n   \\n \\n<ion-content>\\n  <ion-item color=\\\"warning\\\" lines=\\\"none\\\">\\n    <ion-label> Sipariş Toplamı </ion-label> \\n    <ion-badge color=\\\"primary\\\"> {{ getOrderPrice() | currencyPipe }} </ion-badge>\\n  </ion-item>\\n\\n  <ion-card>\\n    <ion-card-header> \\n      <ion-card-title>Sipariş Durumu</ion-card-title>\\n    </ion-card-header>\\n    <ion-item lines=\\\"none\\\"> \\n      <ion-label>Sipariş durumun </ion-label>\\n      <ion-select multiple=\\\"false\\\" placeholder=\\\"Değerlendiriliyor\\\" (ionChange)=\\\"newStatus($event)\\\" [(ngModel)]=\\\"order.status.status\\\" multiple=\\\"false\\\">\\n        <ion-select-option *ngFor=\\\"let status of orderStatus.status;\\\" [value]=\\\"status.id\\\">{{status.value}}</ion-select-option> \\n      </ion-select> \\n    </ion-item>\\n\\n    <ion-button (click)=\\\"updateOrderStatus()\\\" size=\\\"small\\\" expand=\\\"block\\\" *ngIf=\\\"update_btn_show\\\"    > \\n      <ion-label>Güncelle</ion-label> \\n    </ion-button>\\n  </ion-card>\\n\\n  <!-- ///////////////////////////////    SİPARİŞLER          ////////////////////////// -->\\n  <ion-card *ngFor=\\\"let cart_item of order.cart_items\\\">\\n    <ion-card-header> \\n      <ion-card-title> {{cart_item.food.title}} </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label>Yemek ücreti</ion-label>\\n          <ion-badge color=\\\"light\\\" mode=\\\"ios\\\">{{cart_item.food.price | currencyPipe}}</ion-badge>\\n        </ion-item>\\n        <ion-list-header>\\n          <ion-label>İlaveler</ion-label>\\n        </ion-list-header>\\n        <div *ngFor=\\\"let forder of cart_item.food.orders\\\">\\n          <ion-item *ngIf=\\\"forder.additional.quantity\\\">\\n            <ion-label>{{forder.additional.name}}</ion-label>\\n            <ion-label>{{forder.additional.quantity}} adet x {{forder.additional.price}}</ion-label>\\n            <ion-badge color=\\\"light\\\" mode=\\\"ios\\\">{{(forder.additional.quantity*forder.additional.price) | currencyPipe}}</ion-badge>\\n          </ion-item>\\n        </div>\\n        <ion-item>\\n          <ion-label>Toplam</ion-label>\\n          <ion-badge color=\\\"medium\\\" mode=\\\"ios\\\">{{getFoodTotalPrice(cart_item) | currencyPipe}}</ion-badge>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card> \\n  <!-- ///////////////////////////////    END SİPARİŞLER      ////////////////////////// -->\\n\\n\\n  <!--  ////////////////////////////////  customer detail     ////////////////////////// -->\\n  <ion-card *ngIf=\\\"order.account\\\"> \\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label>İletişim Bilgileri</ion-label> \\n      </ion-list-header>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.adi_soyadi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.il_adi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.ilce_adi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.mahalle}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.cadde_sokak}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.bina}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.adresin_devami}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.yol_tarifi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.tel}} </ion-label>\\n      </ion-item>\\n\\n      <ion-list-header>\\n        <ion-label>Hesap Sahibi</ion-label> \\n      </ion-list-header>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label> {{order.account.displayName}} </ion-label> \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label> {{order.account.phoneNumber}} </ion-label> \\n      </ion-item>\\n    </ion-list> \\n  </ion-card> \\n\\n  <!--- ---------------------------  MASAYA sipariş ------------------- -->\\n  <ion-card *ngIf=\\\"!order.account\\\">\\n    <ion-card-header>\\n      <ion-card-title>Masa : {{order.shipping_address.table_name_for_totable}}</ion-card-title> \\n    </ion-card-header>\\n    <ion-card-content> \\n      <ion-item lines=\\\"none\\\"> \\n        <ion-label *ngIf=\\\"order.shipping_address\\\"> {{order.shipping_address.name_surname_for_totable}} </ion-label>\\n      </ion-item> \\n    </ion-card-content>\\n  </ion-card>\\n  <!-- ----- end masaya sipariş -------------- -->\\n\\n  <!--  ////////////////////////////////  END customer detail ////////////////////////// -->\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderDetailsPage } from './order-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderDetailsPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlci1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartItem, Order, OrderStatus } from 'src/app/objects/cart.model';\nimport { Location } from '@angular/common';\nimport { Additional, FoodDrinkFood } from 'src/app/objects/food-drink-menu.model';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.page.html',\n  styleUrls: ['./order-details.page.scss'],\n})\nexport class OrderDetailsPage implements OnInit {\n  order: Order;\n  cid : string;\n  orderStatus: OrderStatus;\n  last_status: any;\n  update_btn_show: boolean = false;\n\n  constructor(public route: ActivatedRoute,\n              public location:Location,\n              private orderService:OrderService,\n              public router: Router) { \n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state){\n        this.order  = this.router.getCurrentNavigation().extras.state.order; \n        this.cid    = this.router.getCurrentNavigation().extras.state.cid; \n      } \n    });\n\n    this.orderStatus = new OrderStatus();\n  }\n\n  ngOnInit() {\n  }\n\n  getFoodTotalPrice(cart_item:CartItem){\n    return this.orderService.getFoodTotalPrice(cart_item)\n  }\n\n  getOrderPrice(){\n    return this.orderService.getOrderPrice(this.order)\n  }\n\n  updateOrderStatus(){\n    this.orderService.updateOrderStatus(this.order.id,this.cid,this.order.status.status).then(()=>{\n      this.update_btn_show = false;\n      if(this.order.status.status == 'gonderildi'){ \n        this.location.back();\n      }\n    })\n  }\n\n  newStatus(event){\n    this.update_btn_show = true;\n  }\n\n  back(){\n    this.location.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderDetailsPageRoutingModule } from './order-details-routing.module';\n\nimport { OrderDetailsPage } from './order-details.page';\n\nimport {CurrencyPipe} from 'src/app/pipes/currency.pipe'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderDetailsPageRoutingModule\n  ],\n  declarations: [OrderDetailsPage,CurrencyPipe]\n})\nexport class OrderDetailsPageModule {}\n"]}