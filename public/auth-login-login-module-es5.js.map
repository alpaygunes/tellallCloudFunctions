{"version":3,"sources":["webpack:///src/app/auth/login/login-routing.module.ts","webpack:///src/app/auth/login/login.page.html","webpack:///src/app/auth/login/login.module.ts","webpack:///src/app/auth/login/login.page.ts","webpack:///src/app/auth/login/login.page.scss"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","authService","appVersion","loadingController","router","location","route","platform","login_error","password_reminder","send_reset_link_msg","send_reset_link_error","returnURL","loader","create","message","duration","loading","afAuth","authState","subscribe","user","navigate","queryParams","params","is","getAppName","then","n","appName","BU","present","login","email","password","firebaseUser","dismiss","bind","error","code","regexp","RegExp","test","sendPasswordResetEmail","back","selector","template"],"mappings":"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","file":"auth-login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","export default \"<ion-toolbar> \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-buttons (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n      </ion-buttons>\\n      <ion-title>Giriş</ion-title>\\n    </ion-tab-bar> \\n  </ion-tabs>\\n</ion-toolbar>\\n\\n\\n<ion-content>  \\n\\n    <ion-grid fixed *ngIf=\\\"!password_reminder\\\" style=\\\"margin-top: 150px;\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label   color=\\\"medium\\\">Eposta</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"email\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label  color=\\\"medium\\\">Password</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" ></ion-input>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <small color=\\\"danger\\\" style=\\\"color: red;\\\">{{login_error}}</small>\\n          <ion-button  (click)=\\\"login()\\\" color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\">\\n            Giriş\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"8\\\"> \\n          <ion-button (click)=\\\"password_reminder=true\\\"   expand=\\\"full\\\" fill=\\\"clear\\\">\\n            Parolamı unuttum ! \\n          </ion-button>  \\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button routerLink=\\\"/register\\\" expand=\\\"full\\\" fill=\\\"clear\\\"  >  Kayıt ol  </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid fixed style=\\\"margin-top: 150px;\\\"  *ngIf=\\\"password_reminder\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Eposta adresiniz</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"email\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-button (click)=\\\"sendResetLink()\\\" color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\">\\n            Parola sıfırlama linki gönder\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"password_reminder && send_reset_link_msg\\\">\\n        <ion-col size=\\\"12\\\">\\n          <ion-icon   name=\\\"checkmark-circle-outline\\\" size=\\\"large\\\" color=\\\"success\\\"></ion-icon>\\n          <ion-label  color=\\\"success\\\" class=\\\"ion-text-wrap\\\">\\n            {{send_reset_link_msg}}\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"password_reminder && send_reset_link_error\\\">\\n        <ion-col size=\\\"12\\\"> \\n          <ion-icon   name=\\\"close-circle-outline\\\" size=\\\"large\\\" color=\\\"danger\\\"></ion-icon>\\n          <ion-label  color=\\\"danger\\\" class=\\\"ion-text-wrap\\\">\\n            {{send_reset_link_error}}\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n \\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage],\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from 'src/app/services/auth.service';\nimport { Platform } from '@ionic/angular';\nimport { AppVersion } from '@ionic-native/app-version/ngx';\nimport { LoadingController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  email: string;\n  password: string;\n  appName: string;\n  loading: HTMLIonLoadingElement;\n  login_error:string          ='';\n  password_reminder:boolean   = false;\n  send_reset_link_msg:string  = '';\n  send_reset_link_error:string = '';\n  returnURL: string           = 'home';\n\n  constructor(private authService       : AuthService,\n              private appVersion        : AppVersion,\n              private loadingController : LoadingController,\n              public  router            : Router, \n              public location:Location,\n              private route             : ActivatedRoute,\n              private platform          : Platform) {  \n                                            this.loader();\n                                          }\n\n  async loader(){\n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 5000\n    }) \n  }\n\n  ionViewWillEnter(){       \n    this.authService.afAuth.authState.subscribe( async user => { \n      if(user){  \n        this.router.navigate(['home'])\n      }\n    })\n  }\n\n  async ngOnInit() {\n\n    this.route.queryParams.subscribe( (params)=>{\n      if(params){\n        this.returnURL = params['returnURL']? params['returnURL']:'home'\n      }\n    }) \n    if(this.platform.is('cordova')){\n      this.appVersion.getAppName().then(n=>{\n        this.appName=n\n      }) \n    }else{\n      this.appName= 'appName'\n    }\n  }\n\n  async login(){\n    const BU = this;\n    this.login_error ='';\n    await this.loading.present();\n    this.authService.login(this.email,this.password,this.returnURL).then(function(firebaseUser) { \n      this.router.navigate(BU.returnURL).then(async ()=>{\n          await this.loading.dismiss();\n      });\n    }.bind(this))\n    .catch(async function(error:any) { \n      if(error.code  == 'auth/wrong-password'){\n        this.login_error = \"Yanlış parola !\"\n      }else if(error.code == \"auth/user-not-found\"){\n        this.login_error = \"Kullanıcı bulunamadı\"\n      }else if(error.code == \"auth/invalid-email\"){\n        this.login_error = \"Eposta adresi uygun biçimde değil\"\n      }else{\n        this.login_error = \"Giriş yapılamadı.\"\n      }\n      await this.loading.dismiss();\n    }.bind(this));\n  }\n\n\n  sendResetLink(){ \n    this.send_reset_link_error          = \"\"\n    this.send_reset_link_msg  = null\n    const regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if(regexp.test(this.email)){ \n      this.loading.present()\n      this.authService.afAuth.sendPasswordResetEmail(this.email).then(function() {\n        this.loading.dismiss()\n        this.send_reset_link_msg = \"Sıfırlama linki gönderdik. Lütfen gelen kutunuzu kontrol edin.\";\n      }.bind(this)).catch(function(error) { \n        this.loading.dismiss()\n        if(error.code == 'auth/wrong-password'){\n          this.send_reset_link_error = \"Yanlış parola !\"\n        }else if(error.code == \"auth/user-not-found\"){\n          this.send_reset_link_error = \"Kullanıcı bulunamadı\"\n        }else if(error.code == \"auth/invalid-email\"){\n          this.send_reset_link_error = \"Eposta adresi uygun biçimde değil\"\n        }else if(error.code == \"auth/too-many-requests\"){\n          this.send_reset_link_error = \"Çok fazla istek yaptınız. Biraz bekleyin\"\n        }else{\n          this.send_reset_link_error = \"Giriş yapılamadı: Bilinmeyen hata!\"\n        }\n      }.bind(this));\n    }else{\n      this.send_reset_link_error = \"Eposta adresi uygunsuz biçimde\";\n    } \n  }\n\n  back(){\n    this.location.back();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";"]}