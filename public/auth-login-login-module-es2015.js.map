{"version":3,"sources":["./src/app/auth/login/login-routing.module.ts","./src/app/auth/login/login.page.html","./src/app/auth/login/login.module.ts","./src/app/auth/login/login.page.ts","./src/app/auth/login/login.page.scss"],"names":[],"mappings":"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","file":"auth-login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","export default \"<ion-toolbar> \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-buttons (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n      </ion-buttons>\\n      <ion-title>Giriş</ion-title>\\n    </ion-tab-bar> \\n  </ion-tabs>\\n</ion-toolbar>\\n\\n\\n<ion-content>  \\n\\n    <ion-grid fixed *ngIf=\\\"!password_reminder\\\" style=\\\"margin-top: 150px;\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label   color=\\\"medium\\\">Eposta</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"email\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label  color=\\\"medium\\\">Password</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" ></ion-input>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <small color=\\\"danger\\\" style=\\\"color: red;\\\">{{login_error}}</small>\\n          <ion-button  (click)=\\\"login()\\\" color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\">\\n            Giriş\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"8\\\"> \\n          <ion-button (click)=\\\"password_reminder=true\\\"   expand=\\\"full\\\" fill=\\\"clear\\\">\\n            Parolamı unuttum ! \\n          </ion-button>  \\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button routerLink=\\\"/register\\\" expand=\\\"full\\\" fill=\\\"clear\\\"  >  Kayıt ol  </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid fixed style=\\\"margin-top: 150px;\\\"  *ngIf=\\\"password_reminder\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Eposta adresiniz</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"email\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-button (click)=\\\"sendResetLink()\\\" color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\">\\n            Parola sıfırlama linki gönder\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"password_reminder && send_reset_link_msg\\\">\\n        <ion-col size=\\\"12\\\">\\n          <ion-icon   name=\\\"checkmark-circle-outline\\\" size=\\\"large\\\" color=\\\"success\\\"></ion-icon>\\n          <ion-label  color=\\\"success\\\" class=\\\"ion-text-wrap\\\">\\n            {{send_reset_link_msg}}\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"password_reminder && send_reset_link_error\\\">\\n        <ion-col size=\\\"12\\\"> \\n          <ion-icon   name=\\\"close-circle-outline\\\" size=\\\"large\\\" color=\\\"danger\\\"></ion-icon>\\n          <ion-label  color=\\\"danger\\\" class=\\\"ion-text-wrap\\\">\\n            {{send_reset_link_error}}\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n \\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage],\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from 'src/app/services/auth.service';\nimport { Platform } from '@ionic/angular';\nimport { AppVersion } from '@ionic-native/app-version/ngx';\nimport { LoadingController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  email: string;\n  password: string;\n  appName: string;\n  loading: HTMLIonLoadingElement;\n  login_error:string          ='';\n  password_reminder:boolean   = false;\n  send_reset_link_msg:string  = '';\n  send_reset_link_error:string = '';\n  returnURL: string           = 'home';\n\n  constructor(private authService       : AuthService,\n              private appVersion        : AppVersion,\n              private loadingController : LoadingController,\n              public  router            : Router, \n              public location:Location,\n              private route             : ActivatedRoute,\n              private platform          : Platform) {  \n                                            this.loader();\n                                          }\n\n  async loader(){\n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 5000\n    }) \n  }\n\n  ionViewWillEnter(){       \n    this.authService.afAuth.authState.subscribe( async user => { \n      if(user){  \n        this.router.navigate(['home'])\n      }\n    })\n  }\n\n  async ngOnInit() {\n\n    this.route.queryParams.subscribe( (params)=>{\n      if(params){\n        this.returnURL = params['returnURL']? params['returnURL']:'home'\n      }\n    }) \n    if(this.platform.is('cordova')){\n      this.appVersion.getAppName().then(n=>{\n        this.appName=n\n      }) \n    }else{\n      this.appName= 'appName'\n    }\n  }\n\n  async login(){\n    const BU = this;\n    this.login_error ='';\n    await this.loading.present();\n    this.authService.login(this.email,this.password,this.returnURL).then(function(firebaseUser) { \n      this.router.navigate(BU.returnURL).then(async ()=>{\n          await this.loading.dismiss();\n      });\n    }.bind(this))\n    .catch(async function(error:any) { \n      if(error.code  == 'auth/wrong-password'){\n        this.login_error = \"Yanlış parola !\"\n      }else if(error.code == \"auth/user-not-found\"){\n        this.login_error = \"Kullanıcı bulunamadı\"\n      }else if(error.code == \"auth/invalid-email\"){\n        this.login_error = \"Eposta adresi uygun biçimde değil\"\n      }else{\n        this.login_error = \"Giriş yapılamadı.\"\n      }\n      await this.loading.dismiss();\n    }.bind(this));\n  }\n\n\n  sendResetLink(){ \n    this.send_reset_link_error          = \"\"\n    this.send_reset_link_msg  = null\n    const regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if(regexp.test(this.email)){ \n      this.loading.present()\n      this.authService.afAuth.sendPasswordResetEmail(this.email).then(function() {\n        this.loading.dismiss()\n        this.send_reset_link_msg = \"Sıfırlama linki gönderdik. Lütfen gelen kutunuzu kontrol edin.\";\n      }.bind(this)).catch(function(error) { \n        this.loading.dismiss()\n        if(error.code == 'auth/wrong-password'){\n          this.send_reset_link_error = \"Yanlış parola !\"\n        }else if(error.code == \"auth/user-not-found\"){\n          this.send_reset_link_error = \"Kullanıcı bulunamadı\"\n        }else if(error.code == \"auth/invalid-email\"){\n          this.send_reset_link_error = \"Eposta adresi uygun biçimde değil\"\n        }else if(error.code == \"auth/too-many-requests\"){\n          this.send_reset_link_error = \"Çok fazla istek yaptınız. Biraz bekleyin\"\n        }else{\n          this.send_reset_link_error = \"Giriş yapılamadı: Bilinmeyen hata!\"\n        }\n      }.bind(this));\n    }else{\n      this.send_reset_link_error = \"Eposta adresi uygunsuz biçimde\";\n    } \n  }\n\n  back(){\n    this.location.back();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}