{"version":3,"sources":["./src/app/pages/order-details/order-details.page.html","./src/app/pages/order-details/order-details-routing.module.ts","./src/app/pages/order-details/order-details.page.scss","./src/app/pages/order-details/order-details.page.ts","./src/app/pages/order-details/order-details.module.ts"],"names":[],"mappings":"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","file":"pages-order-details-order-details-module-es2015.js","sourcesContent":["export default \"<ion-toolbar> \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-buttons  (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\"c></ion-icon>\\n      </ion-buttons>\\n      <ion-title >Sipariş Detayları</ion-title>\\n    </ion-tab-bar> \\n  </ion-tabs>\\n</ion-toolbar>\\n   \\n \\n<ion-content>\\n  <ion-item color=\\\"warning\\\" lines=\\\"none\\\">\\n    <ion-label> Sipariş Toplamı </ion-label> \\n    <ion-badge color=\\\"primary\\\"> {{ getOrderPrice() | currencyPipe }} </ion-badge>\\n  </ion-item>\\n\\n  <ion-card>\\n    <ion-card-header> \\n      <ion-card-title>Sipariş Durumu</ion-card-title>\\n    </ion-card-header>\\n    <ion-item lines=\\\"none\\\"> \\n      <ion-label>Sipariş durumun </ion-label>\\n      <ion-select multiple=\\\"false\\\" placeholder=\\\"Değerlendiriliyor\\\" (ionChange)=\\\"newStatus($event)\\\" [(ngModel)]=\\\"order.status.status\\\" multiple=\\\"false\\\">\\n        <ion-select-option *ngFor=\\\"let status of orderStatus.status;\\\" [value]=\\\"status.id\\\">{{status.value}}</ion-select-option> \\n      </ion-select> \\n    </ion-item>\\n\\n    <ion-button (click)=\\\"updateOrderStatus()\\\" size=\\\"small\\\" expand=\\\"block\\\" *ngIf=\\\"update_btn_show\\\"    > \\n      <ion-label>Güncelle</ion-label> \\n    </ion-button>\\n  </ion-card>\\n\\n  <!-- ///////////////////////////////    SİPARİŞLER          ////////////////////////// -->\\n  <ion-card *ngFor=\\\"let cart_item of order.cart_items\\\">\\n    <ion-card-header> \\n      <ion-card-title> {{cart_item.food.title}} </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label>Yemek ücreti</ion-label>\\n          <ion-badge color=\\\"light\\\" mode=\\\"ios\\\">{{cart_item.food.price | currencyPipe}}</ion-badge>\\n        </ion-item>\\n        <ion-list-header>\\n          <ion-label>İlaveler</ion-label>\\n        </ion-list-header>\\n        <div *ngFor=\\\"let forder of cart_item.food.orders\\\">\\n          <ion-item *ngIf=\\\"forder.additional.quantity\\\">\\n            <ion-label>{{forder.additional.name}}</ion-label>\\n            <ion-label>{{forder.additional.quantity}} adet x {{forder.additional.price}}</ion-label>\\n            <ion-badge color=\\\"light\\\" mode=\\\"ios\\\">{{(forder.additional.quantity*forder.additional.price) | currencyPipe}}</ion-badge>\\n          </ion-item>\\n        </div>\\n        <ion-item>\\n          <ion-label>Toplam</ion-label>\\n          <ion-badge color=\\\"medium\\\" mode=\\\"ios\\\">{{getFoodTotalPrice(cart_item) | currencyPipe}}</ion-badge>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card> \\n  <!-- ///////////////////////////////    END SİPARİŞLER      ////////////////////////// -->\\n\\n\\n  <!--  ////////////////////////////////  customer detail     ////////////////////////// -->\\n  <ion-card *ngIf=\\\"order.account\\\"> \\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label>İletişim Bilgileri</ion-label> \\n      </ion-list-header>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.adi_soyadi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.il_adi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.ilce_adi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.mahalle}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.cadde_sokak}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.bina}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.adresin_devami}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.yol_tarifi}} </ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label > {{order.shipping_address.tel}} </ion-label>\\n      </ion-item>\\n\\n      <ion-list-header>\\n        <ion-label>Hesap Sahibi</ion-label> \\n      </ion-list-header>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label> {{order.account.displayName}} </ion-label> \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label> {{order.account.phoneNumber}} </ion-label> \\n      </ion-item>\\n    </ion-list> \\n  </ion-card> \\n\\n  <!--- ---------------------------  MASAYA sipariş ------------------- -->\\n  <ion-card *ngIf=\\\"!order.account\\\">\\n    <ion-card-header>\\n      <ion-card-title>Masa : {{order.shipping_address.table_name_for_totable}}</ion-card-title> \\n    </ion-card-header>\\n    <ion-card-content> \\n      <ion-item lines=\\\"none\\\"> \\n        <ion-label *ngIf=\\\"order.shipping_address\\\"> {{order.shipping_address.name_surname_for_totable}} </ion-label>\\n      </ion-item> \\n    </ion-card-content>\\n  </ion-card>\\n  <!-- ----- end masaya sipariş -------------- -->\\n\\n  <!--  ////////////////////////////////  END customer detail ////////////////////////// -->\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderDetailsPage } from './order-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderDetailsPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlci1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartItem, Order, OrderStatus } from 'src/app/objects/cart.model';\nimport { Location } from '@angular/common';\nimport { Additional, FoodDrinkFood } from 'src/app/objects/food-drink-menu.model';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.page.html',\n  styleUrls: ['./order-details.page.scss'],\n})\nexport class OrderDetailsPage implements OnInit {\n  order: Order;\n  cid : string;\n  orderStatus: OrderStatus;\n  last_status: any;\n  update_btn_show: boolean = false;\n\n  constructor(public route: ActivatedRoute,\n              public location:Location,\n              private orderService:OrderService,\n              public router: Router) { \n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state){\n        this.order  = this.router.getCurrentNavigation().extras.state.order; \n        this.cid    = this.router.getCurrentNavigation().extras.state.cid; \n      } \n    });\n\n    this.orderStatus = new OrderStatus();\n  }\n\n  ngOnInit() {\n  }\n\n  getFoodTotalPrice(cart_item:CartItem){\n    return this.orderService.getFoodTotalPrice(cart_item)\n  }\n\n  getOrderPrice(){\n    return this.orderService.getOrderPrice(this.order)\n  }\n\n  updateOrderStatus(){\n    this.orderService.updateOrderStatus(this.order.id,this.cid,this.order.status.status).then(()=>{\n      this.update_btn_show = false;\n      if(this.order.status.status == 'gonderildi'){ \n        this.location.back();\n      }\n    })\n  }\n\n  newStatus(event){\n    this.update_btn_show = true;\n  }\n\n  back(){\n    this.location.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderDetailsPageRoutingModule } from './order-details-routing.module';\n\nimport { OrderDetailsPage } from './order-details.page';\n\nimport {CurrencyPipe} from 'src/app/pipes/currency.pipe'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderDetailsPageRoutingModule\n  ],\n  declarations: [OrderDetailsPage,CurrencyPipe]\n})\nexport class OrderDetailsPageModule {}\n"],"sourceRoot":"webpack:///"}