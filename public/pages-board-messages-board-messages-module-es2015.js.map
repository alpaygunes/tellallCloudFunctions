{"version":3,"sources":["./src/app/pages/board-messages/board-messages-routing.module.ts","./src/app/pages/board-messages/board-messages.page.html","./src/app/pages/board-messages/board-messages.page.scss","./src/app/pages/board-messages/board-messages.page.ts","./src/app/pages/board-messages/board-messages.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AAEG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;AChB3C;AAAe,ysBAA0oB,aAAa,+CAA+C,sBAAsB,+RAA+R,+BAA+B,iDAAiD,kCAAkC,2dAA2d,wBAAwB,iDAAiD,2BAA2B,ikBAAikB,sBAAsB,6CAA6C,IAAI,2CAA2C,wTAAwT,gEAAgE,+BAA+B,wWAAwW,E;;;;;;;;;;;;ACA7mG;AAAe,mFAAoB,qBAAqB,iBAAiB,sBAAsB,uBAAuB,mBAAmB,GAAG,cAAc,0BAA0B,GAAG,uBAAuB,oBAAoB,sBAAsB,GAAG,yBAAyB,qBAAqB,GAAG,kCAAkC,oBAAoB,oBAAoB,uBAAuB,iBAAiB,sBAAsB,GAAG,6CAA6C,+iCAA+iC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz9C;AACQ;AACc;AACL;AACT;AACV;AACb;AACyB;AACR;IAO/C,iBAAiB,SAAjB,iBAAiB;IAS5B,YAAmB,KAAqB,EACrB,MAAc,EACd,QAAiB,EAChB,eAA+B,EAC/B,cAA6B,EAC7B,iBAAoC,EACrC,WAAuB,EACtB,cAA6B;QAP9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAe;QAC7B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACrC,gBAAW,GAAX,WAAW,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAe;QAbjD,UAAK,GAAY,IAAI,qEAAO,EAAE,CAAC;QAE/B,sBAAiB,GAAa,KAAK,CAAC;QACpC,iBAAY,GAAU,KAAK,CAAC;QAWd,IAAI,CAAC,KAAK,GAAM,IAAI,2EAAa,EAAE,CAAC;IACtC,CAAC;IAEP,QAAQ;;YACZ,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACjD,OAAO,EAAE,gBAAgB;gBACzB,QAAQ,EAAC,IAAI;aACd,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;YAEzD,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAO,IAAI,EAAC,EAAE;gBACrC,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC7B,IAAI,CAAC,KAAK,GAAI,IAAI;gBAClB,IAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAC;oBAClC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE;oBACnD,IAAG,CAAC,MAAM,EAAC;wBACT,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,KAAK,EAAE,QAAQ;4BACf,OAAO,EAAE,mCAAmC;4BAC5C,QAAQ,EAAE,IAAI;yBACf,CAAC,CAAC;wBACH,KAAK,CAAC,OAAO,EAAE,CAAC;wBAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;wBACjC,OAAO;qBACR;iBACF;gBACD,IAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,MAAM,EAAC;oBACpC,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;iBAC9B;qBAAK,IAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,UAAU,EAAC;oBAC9C,IAAI,CAAC,mBAAmB,EAAE,CAAC;iBAC5B;qBAAK,IAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,iBAAiB,EAAC;oBACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;YACH,CAAC,EAAC,CAAC,KAAK,CAAC,GAAE,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;YACxC,CAAC,CAAC;QACJ,CAAC;KAAA;IAEK,uBAAuB;;YAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAC,EAAE;gBACxB,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG;gBACrC,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,GAAG,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,EAAC,EAAE;oBACvF,IAAG,OAAO,CAAC,IAAI,EAAE,EAAC;wBAChB,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;qBAChC;yBAAI;wBACH,GAAG,CAAC,KAAK,CAAC;qBACX;gBACH,CAAC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC;KAAA;IAEK,YAAY;;YAChB,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAC,EAAE;gBACxB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC/E,GAAG,CAAU,IAAI,CAAC;gBACpB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAM,QAAQ,EAAC,EAAE,CAAC;YAC7G,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,MAAM,EAAC,MAAK,EAAC,KAAI;YACnD,IAAG,QAAQ,CAAC,MAAM,EAAC;gBACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAE;oBAChC,uBAAQ,EAAE,EAAC,GAAG,CAAC,EAAE,EAAC,MAAM,EAAC,IAAI,IAAI,GAAG,EAAC;gBACvC,CAAC,CAAC;aACH;YACD,IAAI,CAAC,sBAAsB,EAAE;QAC/B,CAAC,EAAC;IACJ,CAAC;IAED,sBAAsB;;QACpB,UAAI,CAAC,QAAQ,0CAAE,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE;YAC5B,IAAG,CAAC,CAAC,IAAI,IAAI,MAAM,EAAC;gBAClB,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAC,EAAE;oBACxF,IAAG,QAAQ,CAAC,IAAI,EAAE,EAAC;wBACjB,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI;qBACnB;yBAAI;wBACH,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK;qBACpB;gBACH,CAAC,CAAC;aACH;iBAAI;gBACH,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI;aACnB;QACH,CAAC,EAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAClC,uBAAS,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,EAAG;YACtC,CAAC,CAAC;YACF,IAAI,CAAC,sBAAsB,EAAE;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAClC,uBAAQ,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE;YACpC,CAAC,CAAC;YACF,IAAI,CAAC,sBAAsB,EAAE;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEK,WAAW,CAAC,OAAe;;YAC/B,IAAG,OAAO,CAAC,IAAI,IAAI,UAAU,EAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,GAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAClE;iBAAK,IAAG,OAAO,CAAC,IAAI,IAAI,iBAAiB,EAAC;gBACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,GAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACzE;iBAAK,IAAG,OAAO,CAAC,IAAI,IAAI,MAAM,EAAC;gBAC9B,IAAI,gBAAgB,GAAqB;oBACvC,KAAK,EAAE;wBACL,OAAO,EAAE,OAAO;qBACjB;iBACF,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,OAAO,CAAC,EAAE,CAAC,EAAC,gBAAgB,CAAC;aAC/E;QACH,CAAC;KAAA;CACF;;YA/JQ,8DAAc;YAAoB,sDAAM;YAGxC,wDAAQ;YACW,+DAAe;YANlC,+EAAc;YAMd,iEAAiB;YACjB,0EAAW;YAJX,+EAAc;;AAWV,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,sFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAmJ7B;AAnJ6B;;;;;;;;;;;;;;;;;;;;;;;;ACfW;AACM;AACF;AAEA;AAEoC;AAEvB;AAEgB;IAU7D,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IATnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,6FAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,sEAAiB,EAAC,uFAAkB,CAAC;KACrD,CAAC;GACW,uBAAuB,CAAG;AAAH","file":"pages-board-messages-board-messages-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoardMessagesPage } from './board-messages.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardMessagesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BoardMessagesPageRoutingModule {}\n","export default \"<ion-header class=\\\"ion-no-border\\\"> \\n  <ion-toolbar> \\n    <ion-tabs>\\n      <ion-tab-bar slot=\\\"top\\\"> \\n        <ion-tab-button>\\n          <ion-menu-button></ion-menu-button>\\n        </ion-tab-button>\\n        <ion-tab-button (click)=\\\"router.navigate(['home'])\\\"> \\n          <ion-icon name=\\\"home\\\"></ion-icon> \\n        </ion-tab-button>    \\n        <ion-tab-button   (click)=\\\"router.navigate(['my-ears'])\\\">\\n          <ion-icon name=\\\"thumbs-up\\\"></ion-icon> \\n        </ion-tab-button>        \\n      </ion-tab-bar>    \\n    </ion-tabs>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div class=\\\"logo-img\\\">\\n    <img src=\\\"{{ board.logo}}\\\" /> \\n    <ion-label class=\\\"logo-title\\\" >{{ board.channel_name }}</ion-label>\\n  </div> \\n\\n  <div *ngFor=\\\"let message of messages\\\">\\n    <!-- ///////////////////////////////// FOOD DRINK MENÜLER /////////////////////// -->\\n    <ion-card  *ngIf=\\\"board?.announce_type == 'food_drink_menu'\\\"> \\n      <ion-card-header>\\n        <ion-card-subtitle >{{message.food_drink_menu.title}} </ion-card-subtitle>\\n        <ion-card-title>{{message.food_drink_menu.subtitle}} </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-icon  *ngIf=\\\"board?.announce_type == 'food_drink_menu'\\\"  name=\\\"restaurant-outline\\\"  (click) = \\\"showMessage(message)\\\" ></ion-icon>\\n      </ion-card-content>  \\n    </ion-card>\\n  \\n    <!-- ///////////////////////////////// BROŞÜR MENÜLER /////////////////////// -->\\n    <ion-card  *ngIf=\\\"board?.announce_type == 'brochure'\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>{{message.brochure.title}} </ion-card-subtitle>\\n        <ion-card-title>{{message.brochure.subtitle}} </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-icon  class=\\\"bigger\\\" *ngIf=\\\"board?.announce_type == 'brochure'\\\" name=\\\"logo-firebase\\\" (click) = \\\"showMessage(message)\\\" ></ion-icon>\\n      </ion-card-content>\\n\\n    </ion-card>\\n\\n    <!-- /////////////////////////////////  REQULAR TEXT MESAJLAR ///////////////////////////// -->\\n    <ion-card *ngIf=\\\"board?.announce_type == 'text'\\\"  class=\\\"ag-reqular-message\\\" button (click) = \\\"showMessage(message)\\\">\\n      <ion-card-header> \\n        <ion-card-title style=\\\"font-size: 14px;\\\" color=\\\"medium\\\">{{message.created_at | unixTimeToDate: 'date'}}  {{message.created_at | unixTimeToDate: 'hm'}}</ion-card-title>\\n        <ion-icon  [src]=\\\"'assets/icon/'+types.getIconByID(message.call_back_id)\\\"></ion-icon> \\n        <ion-badge [color]=\\\"message.readed ? 'success' : 'danger'\\\" *ngIf=\\\"!message.readed\\\">Okunmadı</ion-badge>\\n      </ion-card-header>\\n      <ion-card-content style=\\\"text-align: justify;\\\">  \\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          {{message.text.substring(0,120)}}...\\n        </ion-label>\\n      </ion-card-content> \\n    </ion-card>\\n  </div>\\n\\n  <!-- NOT FOUND-->\\n  <ion-card *ngIf=\\\"message_not_found\\\">  \\n    <ion-card-header>\\n      <ion-card-subtitle>Henüz mesaj yok.</ion-card-subtitle>\\n      <ion-card-title>Güzel mesajlar gelecek...</ion-card-title>\\n    </ion-card-header> \\n  </ion-card>\\n\\n</ion-content>\\n\";","export default \"ion-card ion-icon {\\n  font-size: 100px;\\n  color: brown;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: block;\\n}\\n\\nion-card {\\n  background: #a52a2a08;\\n}\\n\\nion-card-subtitle {\\n  font-size: 24px;\\n  font-weight: bold;\\n}\\n\\n.ag-reqular-message {\\n  margin-top: 30px;\\n}\\n\\n.ag-reqular-message ion-icon {\\n  font-size: 20px;\\n  font-size: 20px;\\n  position: relative;\\n  float: right;\\n  margin-top: -15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2JvYXJkLW1lc3NhZ2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtFQUFpQixlQUFBO0VBQ2pCLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBRUoiLCJmaWxlIjoiYm9hcmQtbWVzc2FnZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQgaW9uLWljb257XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBjb2xvcjogYnJvd247XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrOyBcbn1cblxuaW9uLWNhcmR7XG4gICAgYmFja2dyb3VuZDojYTUyYTJhMDg7IFxufVxuXG5pb24tY2FyZC1zdWJ0aXRsZXtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5hZy1yZXF1bGFyLW1lc3NhZ2V7IFxuICAgIG1hcmdpbi10b3A6IDMwcHg7XG59XG5cbi5hZy1yZXF1bGFyLW1lc3NhZ2UgaW9uLWljb257XG4gICAgZm9udC1zaXplOiAyMHB4OyBmb250LXNpemU6IDIwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcbn1cbiJdfQ== */\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { MessageService } from 'src/app/services/message.service';\nimport { CallBackTypes, FeedBack, Message } from 'src/app/objects/message.model' \nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { Channel } from 'src/app/objects/channel.model';\nimport { Location } from '@angular/common';\nimport { LoadingController, ToastController } from '@ionic/angular'; \nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-board-messages',\n  templateUrl: './board-messages.page.html',\n  styleUrls: ['./board-messages.page.scss'],\n})\nexport class BoardMessagesPage implements OnInit {\n  messages: Message[];  \n  board_id:string;\n  board: Channel = new Channel();\n  loading: HTMLIonLoadingElement;\n  message_not_found : boolean = false;\n  show_message:boolean= false;  \n  types:CallBackTypes; \n\n  constructor(public route: ActivatedRoute,\n              public router: Router,\n              public location:Location, \n              private toastController:ToastController,\n              private messageService:MessageService, \n              private loadingController: LoadingController,\n              public authService:AuthService,\n              private channelService:ChannelService) { \n                this.types    = new CallBackTypes();\n              }\n\n  async ngOnInit() { \n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration:5000\n    });\n    await this.loading.present(); \n    this.board_id   = this.route.snapshot.paramMap.get('cid')  \n    \n    this.getBoardInfo().then(async (chnl)=>{ \n      await this.loading.dismiss(); \n      this.board  = chnl\n      if(this.board.confirmation_required){ \n        const verify = await this.checkSubscriptionVerify()\n        if(!verify){       \n          const toast = await this.toastController.create({\n            color: 'danger',\n            message: \"Aboneliğiniz henüz onay aşmasında\",\n            duration: 4000\n          });\n          toast.present();\n          this.router.navigate(['my-ears'])\n          return;\n        }\n      }\n      if(this.board.announce_type == 'text'){  \n        this.getTextMessages();\n        await this.loading.dismiss();\n      }else if(this.board.announce_type == 'brochure'){\n        this.getBrochureMessages();\n      }else if(this.board.announce_type == 'food_drink_menu'){\n        this.getFoodDrinkMessages();\n      }\n    }).catch(()=>{\n      console.log(\"Kanal bilgisi alınamadı\")\n    })\n  }\n\n  async checkSubscriptionVerify(){\n    return new Promise((res)=>{\n      const uid = this.authService.USER.uid\n      this.channelService.checkSubscriptionVerify(uid,this.board_id).ref.get().then((sbscrtn)=>{ \n        if(sbscrtn.data()){\n          res(sbscrtn.data()['veryfied'])\n        }else{\n          res(false)\n        }\n      })\n    })\n  }\n\n  async getBoardInfo():Promise<Channel>{\n    return new Promise((res)=>{\n      this.channelService.getChannelInfo(this.board_id).valueChanges().subscribe(data=>{\n        res(<Channel>data)\n      });\n    })\n  }\n\n  getTextMessages(){\n    this.messageService.getTextMessages(this.board_id).valueChanges({ idField: 'id' }).subscribe(async msgDatas => {\n      await this.loading.dismiss();        \n      this.message_not_found = msgDatas.length?false:true \n      if(msgDatas.length){\n        this.messages = msgDatas.map(msg=>{ \n          return {id:msg.id,readed:true,...msg}\n        })\n      }\n      this.getUserFeedbackIfExist()\n    })\n  }\n\n  getUserFeedbackIfExist(){  \n    this.messages?.forEach((m,i)=>{ \n      if(m.type == 'text'){\n        this.messageService.getUserFeedbackIfExist(this.board_id,m.id).ref.get().then((feedback)=>{\n          if(feedback.data()){\n            m['readed'] = true\n          }else{\n            m['readed'] = false\n          } \n        })\n      }else{\n        m['readed'] = true\n      }\n    })\n  }\n\n  getBrochureMessages(){ \n    this.messageService.getBrochureMessages(this.board_id).ref.get().then( data => { \n      this.loading.dismiss(); \n      console.log(\"getBrochureMessages \"); \n      this.messages = data.docs.map(doc => {\n        return { id: doc.id,...doc.data() };\n      })\n      this.getUserFeedbackIfExist() \n    })\n  }\n\n  getFoodDrinkMessages(){ \n    this.messageService.getFoodDrinkMessages(this.board_id).ref.get().then(data => {\n      this.loading.dismiss(); \n      console.log(\"getFoodDrinkMessages aboneliği tetiklendi\");\n      this.messages = data.docs.map(doc => {\n        return {id: doc.id,...doc.data()};\n      })\n      this.getUserFeedbackIfExist() \n    })\n  }\n \n  back(){\n    this.location.back();\n  }\n\n  async showMessage(message:Message){  \n    if(message.type == 'brochure'){      \n      this.router.navigate(['/brochure/'+this.board_id+'/'+message.id])\n    }else if(message.type == 'food_drink_menu'){\n      this.router.navigate(['/food-drink-menu/'+this.board_id+'/'+message.id])\n    }else if(message.type == 'text'){ \n      let navigationExtras: NavigationExtras = {\n        state: {\n          message: message\n        }\n      };\n      this.router.navigate(['/text/'+this.board_id+'/'+message.id],navigationExtras) \n    }\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BoardMessagesPageRoutingModule } from './board-messages-routing.module';\n\nimport { BoardMessagesPage } from './board-messages.page';\n\nimport { UnixTimeToDatePipe } from 'src/app/pipes/unix-time-to-date.pipe';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BoardMessagesPageRoutingModule\n  ],\n  declarations: [BoardMessagesPage,UnixTimeToDatePipe], \n})\nexport class BoardMessagesPageModule {}\n"],"sourceRoot":"webpack:///"}