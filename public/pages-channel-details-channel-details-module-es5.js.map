{"version":3,"sources":["webpack:///src/app/pages/channel-details/channel-details-routing.module.ts","webpack:///src/app/pages/channel-details/channel-details.module.ts","webpack:///src/app/pages/channel-details/channel-details.page.scss","webpack:///src/app/pages/channel-details/channel-details.page.html","webpack:///src/app/pages/channel-details/channel-details.page.ts"],"names":["routes","path","component","ChannelDetailsPageRoutingModule","imports","forChild","exports","ChannelDetailsPageModule","declarations","ChannelDetailsPage","channelService","location","alertController","route","authService","toastController","platform","router","loadingController","userService","channel","channel_exist","channel_in_ears_list","password","query_continues","error","backBtnSub","backButton","subscribe","back","channel_id","snapshot","paramMap","get","checkChannelExistInUserEarsList","getChannelInfo","afAuth","authState","user","errorMessage","USER","create","message","duration","loading","present","ref","then","dismiss","data","id","ear","uid","subscribed_channel","console","log","with_password","Password","nativeElement","style","borderColor","replace","subsicribeToChannel","confirmation_required","result","navigate","subscribe_id","cssClass","header","buttons","text","role","handler","blah","unsubscribeFromChannel","color","toast","alert","unsubscribe","read","selector","template"],"mappings":"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","file":"pages-channel-details-channel-details-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChannelDetailsPage } from './channel-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChannelDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChannelDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChannelDetailsPageRoutingModule } from './channel-details-routing.module';\n\nimport { ChannelDetailsPage } from './channel-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChannelDetailsPageRoutingModule\n  ],\n  declarations: [ChannelDetailsPage]\n})\nexport class ChannelDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFubmVsLWRldGFpbHMucGFnZS5zY3NzIn0= */\";","export default \"<ion-header  class=\\\"ion-no-border\\\" *ngIf=\\\"authService.USER\\\">\\n \\n  <ion-toolbar>\\n    <ion-title>Channel Info</ion-title>\\n    <ion-buttons slot=\\\"start\\\" (click)=\\\"back()\\\">\\n      <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>   \\n  \\n  <ion-toolbar> \\n    <ion-tabs>\\n      <ion-tab-bar>\\n        <ion-tab-button>\\n          <ion-menu-button></ion-menu-button>\\n        </ion-tab-button>\\n        <ion-tab-button (click)=\\\"router.navigate(['home'])\\\">\\n          <ion-icon name=\\\"home\\\"></ion-icon>\\n        </ion-tab-button>\\n      </ion-tab-bar>\\n    </ion-tabs>\\n  </ion-toolbar>\\n  \\n</ion-header>\\n\\n\\n\\n<ion-content>\\n\\n  <ion-card *ngIf=\\\"channel_exist\\\">\\n    <img style=\\\"width: 100%;\\\" [src]=\\\"channel.logo\\\" />\\n    <ion-card-header>\\n      <ion-card-subtitle>Kanal Sahibi</ion-card-subtitle>\\n      <ion-card-title>{{channel.channel_name}}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      {{channel.description}}\\n     </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngIf=\\\"!channel_exist && !query_continues\\\"> \\n    <ion-card-header> \\n      <ion-card-title>Kanal Bulunamadı</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      Aradığınız kanalı bulamadık. Kaldırılmış olabilir.\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngIf=\\\"channel.with_password\\\"> \\n    <ion-card-header> \\n      <ion-card-title>Parola Gerekli</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input #Password type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Parola\\\"></ion-input>\\n      </ion-item>\\n      <small>Lütfen size verilen parolayı yazın</small>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <div *ngIf=\\\"error\\\">\\n    <ion-card> \\n      <ion-card-content>\\n        {{errorMessage}}\\n      </ion-card-content>\\n      <ion-button routerLink=\\\"/register\\\"  expand=\\\"full\\\" fill=\\\"clear\\\" shape=\\\"round\\\" > Hesap oluştur  </ion-button>\\n      <ion-button routerLink=\\\"/login\\\"     expand=\\\"full\\\" fill=\\\"clear\\\" shape=\\\"round\\\" >  Giriş </ion-button>      \\n    </ion-card>\\n  </div>\\n \\n</ion-content>\\n\\n<ion-toolbar *ngIf=\\\"!error\\\">  \\n  <ion-tabs *ngIf=\\\"!channel.confirmation_required\\\">\\n    <ion-tab-bar slot=\\\"bottom\\\">\\n      <ion-label *ngIf=\\\"!channel_in_ears_list && channel_exist\\\" (click)=\\\"subsicribeToChannel()\\\" >Abone ol</ion-label>\\n      <ion-label *ngIf=\\\"channel_in_ears_list\\\" > Zaten Abonesiniz </ion-label>\\n      <ion-icon name=\\\"chevron-back\\\" (click)=\\\"back()\\\" *ngIf=\\\"!channel_exist\\\" ></ion-icon>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n  <ion-tabs *ngIf=\\\"channel.confirmation_required\\\">\\n    <ion-tab-bar slot=\\\"bottom\\\">\\n      <ion-label  *ngIf=\\\"!channel_in_ears_list && channel_exist\\\" (click)=\\\"subsicribeToChannel()\\\" >Abone ol</ion-label>\\n      <ion-label *ngIf=\\\"channel_in_ears_list && !subscribed_channel.confirmation_required\\\" (click)=\\\"unsubscribeFromChannel(channel.id,subscribed_channel.id)\\\"> İstek Gönderilmiş - İptal Et  </ion-label>\\n      <ion-label   (click)=\\\"back()\\\" *ngIf=\\\"subscribed_channel?.confirmation_required\\\" >Zaten Abonesiniz</ion-label>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n\\n</ion-toolbar>\";","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { ChannelService } from 'src/app/services/channel.service' \nimport { ActivatedRoute } from '@angular/router';\nimport { Channel, Scret } from 'src/app/objects/channel.model';\nimport { UserService } from 'src/app/services/user.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';   \nimport { AlertController, LoadingController, Platform, ToastController } from '@ionic/angular';\nimport { Location } from '@angular/common';\n\n \n\n\n@Component({\n  selector: 'app-channel-details',\n  templateUrl: './channel-details.page.html',\n  styleUrls: ['./channel-details.page.scss'],\n})\nexport class ChannelDetailsPage implements OnInit {\n  channel_id:string;\n  channel   :Channel    = new Channel(); \n  channel_exist:boolean = false;\n  channel_in_ears_list:boolean = false;\n  subscribed_channel:Channel;\n  password    :string   = null \n  query_continues       = true;\n  backBtnSub  : any;\n  error       :boolean  = false;\n  errorMessage:string;\n\n\n  @ViewChild('Password',{ read: ElementRef }) Password: ElementRef;\n  constructor(private channelService:ChannelService,\n              public location:Location,\n              private alertController:AlertController, \n              public route: ActivatedRoute,\n              public authService: AuthService,\n              private toastController:ToastController,\n              private platform:Platform,\n              public router:Router, \n              private loadingController: LoadingController,\n              private userService:UserService) { }\n\n  ngOnInit() {  \n    this.backBtnSub = this.platform.backButton.subscribe(() => { \n      this.back()\n    });\n\n    this.query_continues       = true;\n    this.channel_id = this.route.snapshot.paramMap.get('id')\n    this.checkChannelExistInUserEarsList()\n    this.getChannelInfo() \n    this.authService.afAuth.authState.subscribe( async user => {  \n      if(!user){ \n        this.error = true;\n        this.errorMessage = \"Kanala abone olabilmeniz için hesabınız olmalı. Lütfen giriş yapın.\" \n      }else{\n        this.authService.USER = user;\n      }\n    })\n  }\n\n  async getChannelInfo(){\n    const loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration:5000,\n    });\n    await loading.present();\n    this.channelService.getChannelInfo(this.channel_id).ref.get()\n    .then(async snapshot=>{\n      await loading.dismiss();\n      if(snapshot.data()){\n        this.channel              = <Channel>snapshot.data();\n        this.channel.id           = this.channel_id\n        this.channel_exist        = true;  \n      }else{\n        this.query_continues      = false; \n      } \n    });\n  }\n\n  checkChannelExistInUserEarsList(){ \n    if(this.authService.USER){      \n      let ear =  this.userService.checkChannelExistInUserEarsList(this.authService.USER.uid,this.channel_id)\n      ear.get().subscribe(channel => {\n        if(channel.data()){\n          this.channel_in_ears_list = channel.data()?true:false;  \n          this.subscribed_channel = <Channel>{id:channel.id,...channel.data()}\n        }\n      })\n      console.log(\"checkChannelExistInUserEarsList aboneliği tetiklendi\");\n    } \n  }\n\n  subsicribeToChannel(){\n\n    if(this.channel.with_password){\n      this.Password.nativeElement.style.borderColor = \"#e7e7e7\"\n      if(this.channel.with_password \n              && (this.password === null  || this.password.replace(/\\s/g, \"\") === '') ){\n        this.Password.nativeElement.style.borderColor = \"red\"\n        return;\n      }\n    }\n\n    if(this.authService.USER){\n      this.password=this.password?this.password:\"\"\n      this.userService.subsicribeToChannel(this.authService.USER,this.channel_id,this.password,this.channel.confirmation_required).then((result)=>{\n        if(result){\n          this.router.navigate(['/board-messages/'+this.channel_id]); \n        }\n      })\n    }\n    \n  }\n\n  async unsubscribeFromChannel(channel_id:string,subscribe_id:string){  \n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Onaylıyor musunuz ?',\n      message: 'İstek iptal edilecek ! ',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: async () => {  \n            const loading = await this.loadingController.create({ \n              message: 'Please wait...',\n              duration: 5000\n            });\n            await loading.present(); \n            this.userService.unsubscribeFromChannel(channel_id,subscribe_id).then(async ()=>{\n              await loading.dismiss();        \n              const toast = await this.toastController.create({\n                color: 'success',\n                message: \"İstek iptal edildi.\",\n                duration: 2000\n              });\n              toast.present();\n              this.channel_in_ears_list = false\n            }) \n          }\n        }\n      ]\n    });\n    await alert.present(); \n  }\n\n  back(){ \n    this.router.navigate(['/home']); \n  }\n\n  ngOnDestroy(){\n    if(this.backBtnSub){\n      this.backBtnSub.unsubscribe();\n    }\n  }\n}\n\n\n"]}