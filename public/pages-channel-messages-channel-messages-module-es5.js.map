{"version":3,"sources":["webpack:///src/app/pages/channel-messages/channel-messages.page.scss","webpack:///src/app/pages/channel-messages/channel-messages-routing.module.ts","webpack:///src/app/pages/channel-messages/channel-messages.module.ts","webpack:///src/app/pages/channel-messages/channel-messages.page.html","webpack:///src/app/pages/channel-messages/channel-messages.page.ts"],"names":["routes","path","component","ChannelMessagesPageRoutingModule","imports","forChild","exports","ChannelMessagesPageModule","declarations","providers","provide","useValue","ChannelMessagesPage","route","toastController","router","location","orderService","ag_subscribers","messageService","loadingController","alertController","channelService","channel","message_not_found","message_not_found_title","message_not_found_subtitle","show_message","feedback","types","create","message","duration","loading","present","channel_id","snapshot","paramMap","get","getChannelInfo","then","chnl","announce_type","getTextMessages","dismiss","getBrochureMessages","getFoodDrinkMessages","getOrders","color","toast","Promise","res","rej","valueChanges","subscribe","data","unsubscribe","snapshotChanges","length","messages","map","e","id","payload","doc","console","log","back","getFeedBackByUID","undefined","sendFeedBack","type","navigate","navigationExtras","state","mid","cid","cssClass","buttons","text","role","handler","blah","deleteMessage","alert","status","limit","filter_end_date","Date","filter_start_date","orders","order","selector","template"],"mappings":"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","file":"pages-channel-messages-channel-messages-module-es5.js","sourcesContent":["export default \"ion-card ion-icon {\\n  font-size: 100px;\\n  color: brown;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: block;\\n  margin-top: 20px;\\n}\\n\\nion-card {\\n  background: #a52a2a08;\\n}\\n\\n.ag-reqular-message {\\n  margin-top: 30px;\\n}\\n\\n.ag-reqular-message ion-icon {\\n  font-size: 20px;\\n  font-size: 20px;\\n  position: relative;\\n  float: right;\\n  margin-top: -15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NoYW5uZWwtbWVzc2FnZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7QUFDSjs7QUFHQTtFQUNJLGdCQUFBO0FBQUo7O0FBR0E7RUFDSSxlQUFBO0VBQWlCLGVBQUE7RUFDakIsa0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFDSiIsImZpbGUiOiJjaGFubmVsLW1lc3NhZ2VzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIGlvbi1pY29ue1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgY29sb3I6IGJyb3duO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG5pb24tY2FyZHtcbiAgICBiYWNrZ3JvdW5kOiNhNTJhMmEwODsgXG59XG5cblxuLmFnLXJlcXVsYXItbWVzc2FnZXsgXG4gICAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuLmFnLXJlcXVsYXItbWVzc2FnZSBpb24taWNvbntcbiAgICBmb250LXNpemU6IDIwcHg7IGZvbnQtc2l6ZTogMjBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbi10b3A6IC0xNXB4O1xufSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChannelMessagesPage } from './channel-messages.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChannelMessagesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChannelMessagesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChannelMessagesPageRoutingModule } from './channel-messages-routing.module';\n\nimport { ChannelMessagesPage } from './channel-messages.page';\n\nimport { UnixTimeToDatePipe } from 'src/app/pipes/unix-time-to-date.pipe';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChannelMessagesPageRoutingModule\n  ],\n  declarations: [ChannelMessagesPage,UnixTimeToDatePipe], \n  providers:[\n    {provide: \"ag_subscribers\", useValue:[]}, \n  ]\n})\nexport class ChannelMessagesPageModule {}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar> \\n    <ion-tabs>\\n      <ion-tab-bar slot=\\\"top\\\">\\n        <ion-tab-button>\\n          <ion-menu-button></ion-menu-button>\\n        </ion-tab-button>\\n        <ion-tab-button (click)=\\\"router.navigate(['home'])\\\"> \\n          <ion-icon name=\\\"home\\\"></ion-icon> \\n        </ion-tab-button>    \\n        <ion-tab-button   (click)=\\\"router.navigate(['my-ears'])\\\">\\n          <ion-icon name=\\\"thumbs-up\\\"></ion-icon> \\n        </ion-tab-button>        \\n      </ion-tab-bar>    \\n    </ion-tabs>\\n  </ion-toolbar>\\n</ion-header>\\n\\n \\n<ion-content> \\n\\n<section class=\\\"logo-img\\\">\\n  <img src=\\\"{{ channel?.logo}}\\\" /> \\n  <ion-label class=\\\"logo-title\\\" >{{ channel?.channel_name }}</ion-label>\\n</section>\\n\\n<ion-item lines=\\\"none\\\" >\\n  <ion-button (click)=\\\"addNew()\\\" expand=\\\"full\\\" fill=\\\"clear\\\" size=\\\"small\\\" >\\n    <ion-icon slot=\\\"start\\\" name=\\\"add-circle\\\"></ion-icon>\\n    Yeni\\n  </ion-button>\\n</ion-item>\\n\\n<!-- ////////////////////   siparişler ///////////////////////////-->\\n<ion-card *ngIf=\\\"channel?.announce_type == 'food_drink_menu'\\\" (click)=\\\"showOrders()\\\" button [disabled]=\\\"orders?.length==0\\\" style=\\\"box-shadow: unset;\\\">\\n  <ion-icon  name=\\\"notifications-circle-outline\\\"></ion-icon>\\n  <ion-card-header>\\n    <ion-card-subtitle style=\\\"text-align: center;\\\">{{orders?.length}} tane bekleyen siparişiniz var</ion-card-subtitle> \\n  </ion-card-header> \\n  <ion-button size=\\\"small\\\" [disabled]=\\\"orders?.length==0\\\" fill=\\\"clear\\\" style=\\\"margin-left: auto;margin-right: auto;display: block;\\\" >Siparişleri göster</ion-button>\\n</ion-card>\\n  \\n<section *ngFor=\\\"let message of messages\\\">\\n  <!-- ///////////////////////////////// FOOD DRINK MENÜLER /////////////////////// -->\\n  <ion-card  *ngIf=\\\"channel?.announce_type == 'food_drink_menu'\\\">\\n\\n    <ion-card-header>\\n      <ion-card-subtitle>{{message.food_drink_menu.title}} </ion-card-subtitle>\\n      <ion-card-title>{{message.food_drink_menu.subtitle}} </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content> \\n      <!-- <ion-icon  *ngIf=\\\"channel?.announce_type == 'food_drink_menu'\\\" [src]=\\\"'assets/icon/'+message.type+'.svg'\\\" (click) = \\\"showMessage(message)\\\" ></ion-icon> -->\\n      <ion-icon  *ngIf=\\\"channel?.announce_type == 'food_drink_menu'\\\"  name=\\\"restaurant-outline\\\" (click) = \\\"showMessage(message)\\\" ></ion-icon>\\n    </ion-card-content>\\n\\n    <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"edit(message.id)\\\" > Düzenle </ion-button>\\n    <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"getStats(channel_id,message.id)\\\" > İstatistik</ion-button>\\n    <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"deleteMessage(message.id,channel_id)\\\">Sil</ion-button>\\n\\n  </ion-card>\\n\\n  <!-- ///////////////////////////////// BROŞÜR MENÜLER /////////////////////// -->\\n  <ion-card  *ngIf=\\\"channel?.announce_type == 'brochure'\\\">\\n\\n    <ion-card-header>\\n      <ion-card-subtitle>{{message.brochure.title}} </ion-card-subtitle>\\n      <ion-card-title>{{message.brochure.subtitle}} </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <!-- <ion-icon  class=\\\"bigger\\\" *ngIf=\\\"channel?.announce_type == 'brochure'\\\"[src]=\\\"'assets/icon/'+message.type+'.svg'\\\" (click) = \\\"showMessage(message)\\\" ></ion-icon> -->\\n      <ion-icon  class=\\\"bigger\\\" *ngIf=\\\"channel?.announce_type == 'brochure'\\\" name=\\\"logo-firebase\\\" (click) = \\\"showMessage(message)\\\" ></ion-icon>\\n    </ion-card-content>\\n\\n    <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"edit(message.id)\\\" > Düzenle </ion-button>\\n    <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"getStats(channel_id,message.id)\\\" > İstatistik</ion-button>\\n    <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"deleteMessage(message.id,channel_id)\\\">Sil</ion-button>\\n\\n  </ion-card>\\n\\n  <!-- /////////////////////////////////  REQULAR TEXT MESAJLAR ///////////////////////////// -->\\n  <ion-card *ngIf=\\\"channel?.announce_type == 'text'\\\" class=\\\"ag-reqular-message\\\" button >\\n    <section (click) = \\\"showMessage(message)\\\">\\n      <ion-card-header> \\n        <ion-card-title> {{ message.created_at | unixTimeToDate: 'hm'}} - {{message.created_at | unixTimeToDate: 'date' }} </ion-card-title>\\n        <ion-icon  [src]=\\\"'assets/icon/'+types.getIconByID(message.call_back_id)\\\"  style=\\\"font-size: 20px;\\\"  ></ion-icon> \\n      </ion-card-header>\\n      <ion-card-content style=\\\"text-align: justify;\\\">  \\n        {{message.text}}\\n      </ion-card-content>\\n    </section>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\" (click) = \\\"showStatistics(message)\\\" > \\n        İstatistik\\n      </ion-col>\\n      <ion-col size=\\\"7\\\"> \\n        Görüntüleme sayısı {{message.reader_count}}\\n      </ion-col>\\n      <ion-col size=\\\"2\\\" (click)=\\\"deleteMessage(message.id,channel_id)\\\">\\n        Sil\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n\\n</section>  \\n\\n  <!-- NOT FOUND-->\\n  <ion-card *ngIf=\\\"message_not_found\\\" button (click)=\\\"addNew()\\\" > \\n    <ion-icon name=\\\"alert-circle-outline\\\"></ion-icon>\\n    <ion-label style=\\\"display: block;text-align: center;\\\">{{message_not_found_title}}</ion-label>\\n    <ion-button size=\\\"small\\\" fill=\\\"clear\\\" style=\\\"margin-left: auto;margin-right: auto;display: block;\\\">{{message_not_found_subtitle}}</ion-button>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { MessageService } from 'src/app/services/message.service';\nimport { CallBackTypes, FeedBack, Message } from 'src/app/objects/message.model' \nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { Channel } from 'src/app/objects/channel.model';\nimport { Location } from '@angular/common';\nimport { AlertController, LoadingController } from '@ionic/angular'; \nimport { ToastController } from '@ionic/angular';\nimport { CartItem, Order, OrderStatus } from 'src/app/objects/cart.model';\nimport { OrderService } from 'src/app/services/order.service';\n\n\n@Component({\n  selector: 'app-channel-messages',\n  templateUrl: './channel-messages.page.html',\n  styleUrls: ['./channel-messages.page.scss'],\n})\nexport class ChannelMessagesPage implements OnInit {\n  messages: Message[];  \n  channel_id:string;\n  channel: Channel = new Channel();\n  loading: HTMLIonLoadingElement;\n  message_not_found : boolean = false;\n  message_not_found_title =\"Henüz mesaj yok.\"\n  message_not_found_subtitle =\"Hemen güzel bir paylaşım yapın.\"\n  show_message:boolean= false; \n  feedback:FeedBack;\n  types:CallBackTypes;\n  orders:Order[];\n\n\n  constructor(public route: ActivatedRoute,\n              private toastController: ToastController,\n              public router: Router,\n              public location:Location, \n              private orderService:OrderService,\n              @Inject(\"ag_subscribers\") private ag_subscribers,\n              private messageService:MessageService,\n              private loadingController: LoadingController,\n              private alertController:AlertController,\n              private channelService:ChannelService) {\n                this.feedback = new FeedBack();\n                this.types    = new CallBackTypes();\n              }\n\n  async ngOnInit() { \n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration:5000\n    });\n    await this.loading.present();\n\n    this.channel_id = this.route.snapshot.paramMap.get('id')   \n    this.getChannelInfo().then(async (chnl)=>{\n      this.channel  = chnl\n      if(this.channel.announce_type == 'text'){\n        this.getTextMessages();\n        await this.loading.dismiss();\n      }else if(this.channel.announce_type == 'brochure'){\n        await this.loading.dismiss();\n        this.getBrochureMessages(); \n      }else if(this.channel.announce_type == 'food_drink_menu'){\n        await this.loading.dismiss();\n        this.getFoodDrinkMessages(); \n        this.getOrders();\n      }\n    }).catch(async ()=>{\n      await this.loading.dismiss();\n      const toast = await this.toastController.create({\n        color: 'dark',\n        message: 'Kanal bulunamadı.',\n        duration: 2000\n      });\n      toast.present();\n    })\n  }\n\n  async getChannelInfo():Promise<Channel>{\n    return new Promise((res,rej)=>{\n      this.channelService.getChannelInfo(this.channel_id).valueChanges()\n      .subscribe(data=>{\n        res(<Channel>data)\n      });\n    })\n  }\n\n  getTextMessages(){\n    if(this.ag_subscribers[this.channel_id]){\n      this.ag_subscribers[this.channel_id].unsubscribe()\n      delete this.ag_subscribers[this.channel_id];\n    }\n    this.ag_subscribers[this.channel_id] = this.messageService.getTextMessages(this.channel_id).snapshotChanges().subscribe(async data => {\n      await this.loading.dismiss();  \n      this.message_not_found = data.length?false:true;\n      this.messages = data.map(e => { \n        return { id: e.payload.doc.id,...e.payload.doc.data()};\n      }) \n    })\n  }\n\n  getBrochureMessages(){\n    if(this.ag_subscribers[this.channel_id]){\n      this.ag_subscribers[this.channel_id].unsubscribe()\n      delete this.ag_subscribers[this.channel_id];\n    }\n    this.ag_subscribers[this.channel_id] = this.messageService.getBrochureMessages(this.channel_id).snapshotChanges().subscribe(async data => {\n      await this.loading.dismiss(); \n      console.log(\"getTextMessages aboneliği tetiklendi\");\n      this.message_not_found            = data.length?false:true \n      this.message_not_found_title      = \"Henüz broşür yok.\"\n      this.message_not_found_subtitle   = \"Güzel bir broşür hazırlayın.\"\n      this.messages = data.map(e => {\n        return {id:e.payload.doc.id,...e.payload.doc.data()};\n      }) \n    })\n  }\n\n  getFoodDrinkMessages(){\n    if(this.ag_subscribers[this.channel_id]){\n      this.ag_subscribers[this.channel_id].unsubscribe()\n      delete this.ag_subscribers[this.channel_id];\n    }\n    this.ag_subscribers[this.channel_id] = this.messageService.getFoodDrinkMessages(this.channel_id).snapshotChanges().subscribe(async data => {\n      await this.loading.dismiss(); \n      console.log(\"getFoodDrinkMessages aboneliği tetiklendi\");\n      this.message_not_found            = data.length?false:true \n      this.message_not_found_title      = \"Henüz menü yok.\"\n      this.message_not_found_subtitle   = \"Güzel bir menü hazırlayın.\" \n      this.messages = data.map(e => {\n        return { id: e.payload.doc['id'],...e.payload.doc.data()};\n      }) \n    })\n  }\n \n  back(){\n    this.location.back();\n  }\n\n  async showMessage(message:Message){     \n    await this.messageService.getFeedBackByUID(message.id,this.channel_id).then(snapshot=>{  \n      if(snapshot.data()!==undefined){\n        this.feedback = snapshot.data();\n      }else{\n        this.messageService.sendFeedBack(new FeedBack(),this.channel_id,message.id)\n      }\n    })\n\n    if(message.type == 'brochure'){      \n      this.router.navigate(['/brochure/'+this.channel_id+'/'+message.id])\n    }else if(message.type == 'food_drink_menu'){\n      this.router.navigate(['/food-drink-menu/'+this.channel_id+'/'+message.id])\n    }else if(message.type == 'text'){ \n      let navigationExtras: NavigationExtras = {\n        state: {\n          message: message,\n          feedback:this.feedback\n        }\n      };\n      this.router.navigate(['/text/'+this.channel_id+'/'+message.id],navigationExtras) \n    }\n  }\n\n  showStatistics(message:Message){ \n    this.messageService.message = message;\n    this.router.navigate(['/message-stats/'+this.channel_id+'/'+message.id])\n  }\n\n  addNew(){ \n    if( this.channel.announce_type == 'menu' ){\n      this.router.navigate(['/edit-message-menu/'+this.channel_id]);\n    }else if( this.channel.announce_type == 'text' ){\n      this.router.navigate(['/add-message-text/'+this.channel_id]);\n    }else if( this.channel.announce_type == 'brochure' ){\n      this.router.navigate(['/edit-message-brochure/'+this.channel_id]);\n    }else if( this.channel.announce_type == 'food_drink_menu' ){\n      this.router.navigate(['/edit-message-food-drink-menu/'+this.channel_id]);\n    }\n  }\n\n  async deleteMessage(mid:string,cid:string){\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      //header: 'Onaylıyor musunuz ?',\n      message: 'Veriler kalıcı olarak silinecek ! ',\n      buttons: [\n        {\n          text: 'Vazgeç',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Sil',\n          handler: async () => {  \n            this.messageService.deleteMessage(mid,cid).then(async ()=>{\n              const toast = await this.toastController.create({\n                color: 'success',\n                message: \"Silme işlemi başarılı\",\n                duration: 3000\n              });\n              toast.present();\n            })\n          }\n        }\n      ]\n    });\n    await alert.present();    \n  }\n \n  edit(mid:string){ \n    if(this.channel.announce_type == 'brochure'){\n      this.router.navigate(['/edit-message-brochure/'+this.channel_id+'/'+mid])\n    }else if(this.channel.announce_type == 'food_drink_menu'){\n      this.router.navigate(['/edit-message-food-drink-menu/'+this.channel_id+'/'+mid])\n    }\n  }\n\n  getStats(cid:string,mid:string){\n    this.router.navigate(['/menu-stats/'+cid+'/'+mid])\n  }\n\n  getOrders(){\n    let status = 'degerlendiriliyor'\n    let limit = 100\n    let filter_end_date = new Date()\n    let filter_start_date = new Date(0) \n    this.orderService.getOrders(this.channel_id,status,filter_start_date,filter_end_date,null,limit).snapshotChanges().subscribe((orders)=>{\n      this.orders = orders.map(order=>{\n        return {id:order.payload.doc.id,...order.payload.doc.data()}\n      })\n    })\n  }\n\n  showOrders(){\n    this.router.navigate(['/orders/'+this.channel_id])\n  }\n}"]}