{"version":3,"sources":["webpack:///src/app/pages/orders/orders-routing.module.ts","webpack:///src/app/pages/orders/orders.page.ts","webpack:///src/app/pages/orders/orders.page.scss","webpack:///src/app/pages/orders/orders.module.ts","webpack:///src/app/pages/orders/orders.page.html"],"names":["routes","path","component","OrdersPageRoutingModule","imports","forChild","exports","OrdersPage","route","orderService","loadingController","router","location","filter_status","showFilterCard","limit","orderStatus","filter_end_date","Date","toString","filter_start_date","cid","snapshot","paramMap","get","getOrders","create","message","duration","loading","present","startAfterDoc","snapshotChanges","subscribe","orders","dismiss","map","order","id","payload","doc","data","length","reference","orderReference","orderBy","where","startAfter","undefined","then","docs","push","getNextOrders","back","total","cart_items","cart_item","food","additional","quantity","price","navigationExtras","state","navigate","getValue","status","selector","template","OrdersPageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAJnC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDAI,UAAU;AAarB,4BAAmBC,KAAnB,EACoBC,YADpB,EAEoBC,iBAFpB,EAGmBC,MAHnB,EAIoBC,QAJpB,EAIqC;AAAA;;AAJlB,eAAAJ,KAAA,GAAAA,KAAA;AACC,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,QAAA,GAAAA,QAAA;AAXpB,eAAAC,aAAA,GAAuB,OAAvB;AAGA,eAAAC,cAAA,GAA0B,KAA1B;AAEA,eAAAC,KAAA,GAAa,CAAb;AAOc,eAAKC,WAAL,GAA0B,IAAI,sEAAJ,EAA1B;AACA,eAAKC,eAAL,GAA2B,IAAIC,IAAJ,EAAD,CAAaC,QAAb,EAA1B;AACA,eAAKC,iBAAL,GAA0B,IAAIF,IAAJ,CAAS,CAAT,CAA1B;AACD;;AArBQ;AAAA;AAAA,iBAuBrB,oBAAW;AACT,iBAAKG,GAAL,GAAa,KAAKb,KAAL,CAAWc,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,KAAjC,CAAb;AACA,iBAAKC,SAAL;AACD;AA1BoB;AAAA;AAAA,iBA4Bf,qBAAS;;;;;;;;;;AACE,6BAAM,KAAKf,iBAAL,CAAuBgB,MAAvB,CAA8B;AACjDC,+BAAO,EAAE,gBADwC;AAEjDC,gCAAQ,EAAE;AAFuC,uBAA9B,CAAN;;;AAAf,2BAAKC,O;;AAIL,6BAAM,KAAKA,OAAL,CAAaC,OAAb,EAAN;;;AAEA,2BAAKC,aAAL,GAAsB,IAAtB;AACId,qC,GAAkB,IAAIC,IAAJ,CAAS,KAAKD,eAAd,C;AACtB,2BAAKR,YAAL,CAAkBgB,SAAlB,CAA4B,KAAKJ,GAAjC,EAAqC,KAAKR,aAA1C,EAAwD,KAAKO,iBAA7D,EAA+EH,eAA/E,EAA+F,KAAKc,aAApG,EAAkH,KAAKhB,KAAvH,EAA8HiB,eAA9H,GAAgJC,SAAhJ,CAA0J,UAAOC,MAAP;AAAA,+BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxK,yCAAM,KAAKL,OAAL,CAAaM,OAAb,EAAN;;AADwK;AAExK,uCAAKD,MAAL,GAAcA,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK,EAAE;AAC9B,2CAAO,MAAP,OAAO,CAAP;AAAQC,wCAAE,EAACD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkBF;AAA7B,qCAAO,EAA4BD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkBC,IAAlB,EAA5B,CAAP;AACD,mCAFa,CAAd;;AAGA,sCAAGP,MAAM,CAACQ,MAAV,EAAiB;AACf,yCAAKX,aAAL,GAAqBG,MAAM,CAACA,MAAM,CAACQ,MAAP,GAAc,CAAf,CAAN,CAAwBH,OAAxB,CAAgCC,GAArD;AACD;;AAPuK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAhB;AAAA,uBAA1J;;;;;;;;;AASD;AA9CoB;AAAA;AAAA,iBAgDf,yBAAa;;;;;;;;;AACbvB,qC,GAAkB,IAAIC,IAAJ,CAAS,KAAKD,eAAd,C;AAClBG,uC,GAAoB,IAAIF,IAAJ,CAAS,KAAKE,iBAAd,C;AACpBuB,+B,GAAY,KAAKlC,YAAL,CAAkBmC,cAAlB,CAAiC,KAAKvB,GAAtC,EACiBwB,OADjB,CACyB,YADzB,EACsC,MADtC,EAEiBC,KAFjB,CAEuB,YAFvB,EAEoC,GAFpC,EAEwC1B,iBAFxC,EAGiB0B,KAHjB,CAGuB,YAHvB,EAGoC,GAHpC,EAGwC7B,eAHxC,EAIiB8B,UAJjB,CAI6B,KAAKhB,aAJlC,EAKiBhB,KALjB,CAKuB,KAAKA,KAL5B,C;;AAOD,6BAAM,KAAKL,iBAAL,CAAuBgB,MAAvB,CAA8B;AACjDC,+BAAO,EAAE,gBADwC;AAEjDC,gCAAQ,EAAE;AAFuC,uBAA9B,CAAN;;;AAAf,2BAAKC,O;;AAIL,6BAAM,KAAKA,OAAL,CAAaC,OAAb,EAAN;;;AAEA,0BAAG,KAAKjB,aAAL,KAAuBmC,SAAvB,IAAoC,KAAKnC,aAAL,KAAuB,OAA9D,EAAsE;AACpE8B,iCAAS,CAACnB,GAAV,GAAgByB,IAAhB,CAAqB,UAAOf,MAAP;AAAA,iCAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,2CAAM,KAAKL,OAAL,CAAaM,OAAb,EAAN;;AADyB;AAEzBD,0CAAM,CAACgB,IAAP,CAAYd,GAAZ,CAAgB,UAAAC,KAAK,EAAE;AACrB,4CAAI,CAACH,MAAL,CAAYiB,IAAZ,CAAiB;AAAQb,0CAAE,EAACD,KAAK,CAACC;AAAjB,yCAAuBD,KAAK,CAACI,IAAN,EAAvB,CAAjB;AACD,qCAFD;;AAGA,wCAAGP,MAAM,CAACgB,IAAP,CAAYR,MAAZ,IAAoB,KAAK3B,KAA5B,EAAkC;AAChC,2CAAKgB,aAAL,GAAqBG,MAAM,CAACgB,IAAP,CAAYhB,MAAM,CAACgB,IAAP,CAAYR,MAAZ,GAAmB,CAA/B,CAArB;AACD,qCAFD,MAEK;AACH,2CAAKX,aAAL,GAAqB,IAArB;AACD;;AATwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAA,yBAArB;AAWD,uBAZD,MAYK;AACHY,iCAAS,CAACG,KAAV,CAAgB,eAAhB,EAAgC,IAAhC,EAAqC,KAAKjC,aAA1C,EAAyDW,GAAzD,GAA+DyB,IAA/D,CAAoE,UAAOf,MAAP;AAAA,iCAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACxE,2CAAM,KAAKL,OAAL,CAAaM,OAAb,EAAN;;AADwE;AAExED,0CAAM,CAACgB,IAAP,CAAYd,GAAZ,CAAgB,UAAAC,KAAK,EAAE;AACrB,4CAAI,CAACH,MAAL,CAAYiB,IAAZ,CAAiB;AAAQb,0CAAE,EAACD,KAAK,CAACC;AAAjB,yCAAuBD,KAAK,CAACI,IAAN,EAAvB,CAAjB;AACD,qCAFD;;AAGA,wCAAGP,MAAM,CAACgB,IAAP,CAAYR,MAAZ,IAAoB,KAAK3B,KAA5B,EAAkC;AAChC,2CAAKgB,aAAL,GAAqBG,MAAM,CAACgB,IAAP,CAAYhB,MAAM,CAACgB,IAAP,CAAYR,MAAZ,GAAmB,CAA/B,CAArB;AACD,qCAFD,MAEK;AACH,2CAAKX,aAAL,GAAqB,IAArB;AACD;;AATuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAA,yBAApE;AAWD;;;;;;;;;AACF;AAzFoB;AAAA;AAAA,iBA2FrB,gBAAI;AACF,iBAAKqB,aAAL;AACD;AA7FoB;AAAA;AAAA,iBA+FrB,gBAAI;AACF,iBAAKxC,QAAL,CAAcyC,IAAd;AACD;AAjGoB;AAAA;AAAA,iBAmGrB,uBAAchB,KAAd,EAAyB;AACvB,gBAAIiB,KAAK,GAAU,CAAnB;AACAjB,iBAAK,CAACkB,UAAN,CAAiBnB,GAAjB,CAAqB,UAACoB,SAAD,EAAsB;AACzCA,uBAAS,CAACC,IAAV,CAAevB,MAAf,CAAsBE,GAAtB,CAA0B,UAACC,KAAD,EAAmB;AAC3CiB,qBAAK,IAAIjB,KAAK,CAACqB,UAAN,CAAiBC,QAAjB,GAA4BtB,KAAK,CAACqB,UAAN,CAAiBE,KAAtD;AACD,eAFD;AAGAN,mBAAK,IAAME,SAAS,CAACC,IAAV,CAAeG,KAA1B;AACD,aALD;AAMA,mBAAON,KAAP;AACD;AA5GoB;AAAA;AAAA,iBA8GrB,0BAAiBjB,KAAjB,EAA4B;AAC1B,gBAAIwB,gBAAgB,GAAqB;AACvCC,mBAAK,EAAE;AAAEzB,qBAAK,EAAEA,KAAT;AAAgBhB,mBAAG,EAAE,KAAKA;AAA1B;AADgC,aAAzC;AAGA,iBAAKV,MAAL,CAAYoD,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAwCF,gBAAxC;AACD;AAnHoB;AAAA;AAAA,iBAqHrB,4BAAgB;AACd,iBAAK/C,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACD;AAvHoB;AAAA;AAAA,iBAyHrB,mBAAUuB,KAAV,EAAqB;AACnB,mBAAO,KAAKrB,WAAL,CAAiBgD,QAAjB,CAA0B3B,KAAK,CAAC4B,MAAN,CAAaA,MAAvC,CAAP;AACD;AA3HoB;;AAAA;AAAA,S;;;;gBAdd;;gBAKA;;gBAEA;;gBAPkC;;gBAClC;;;;AAaI1D,gBAAU,6DALtB,gEAAU;AACT2D,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR,oEAFS;;AAAA,OAAV,CAKsB,GAAV5D,UAAU,CAAV;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCuBF6D,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAT5B,+DAAS;AACRhE,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORiE,oBAAY,EAAE,CAAC,uDAAD,EAAY,wEAAZ,EAAyB,uFAAzB;AAPN,OAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA","file":"pages-orders-orders-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdersPage } from './orders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdersPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { CartItem, Order, OrderStatus } from 'src/app/objects/cart.model';\nimport { Additional, OrderItem } from 'src/app/objects/food-drink-menu.model';\nimport { OrderService } from 'src/app/services/order.service'; \nimport { AngularFirestoreDocument, DocumentData } from '@angular/fire/firestore';\nimport { LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.page.html',\n  styleUrls: ['./orders.page.scss'],\n})\nexport class OrdersPage implements OnInit {\n\n  cid: string;\n  orders:Order[];\n  orderStatus: OrderStatus;\n  loading: HTMLIonLoadingElement;\n  filter_status:string = 'hepsi';\n  filter_start_date:Date;\n  filter_end_date:string;\n  showFilterCard: Boolean = false; \n  startAfterDoc: DocumentData;\n  limit:number=1;\n\n  constructor(public route: ActivatedRoute,\n              private orderService:OrderService,\n              private loadingController : LoadingController,\n              public router: Router, \n              private location:Location){\n                this.orderStatus        = new OrderStatus();\n                this.filter_end_date    = (new Date()).toString();\n                this.filter_start_date  = new Date(0); \n              }\n\n  ngOnInit() {\n    this.cid   = this.route.snapshot.paramMap.get('cid')\n    this.getOrders()\n  }\n\n  async getOrders(){\n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 5000\n    })  \n    await this.loading.present();\n    \n    this.startAfterDoc  = null\n    let filter_end_date = new Date(this.filter_end_date)\n    this.orderService.getOrders(this.cid,this.filter_status,this.filter_start_date,filter_end_date,this.startAfterDoc,this.limit).snapshotChanges().subscribe(async (orders)=>{\n      await this.loading.dismiss();\n      this.orders = orders.map(order=>{\n        return {id:order.payload.doc.id,...order.payload.doc.data()}\n      }) \n      if(orders.length){\n        this.startAfterDoc = orders[orders.length-1].payload.doc;\n      }\n    })\n  }\n\n  async getNextOrders(){\n    let filter_end_date = new Date(this.filter_end_date)\n    let filter_start_date = new Date(this.filter_start_date)\n    let reference = this.orderService.orderReference(this.cid)\n                                    .orderBy('created_at','desc')\n                                    .where('created_at','>',filter_start_date)\n                                    .where('created_at','<',filter_end_date)\n                                    .startAfter( this.startAfterDoc)\n                                    .limit(this.limit);\n                                    \n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 5000\n    })  \n    await this.loading.present();\n\n    if(this.filter_status === undefined || this.filter_status === 'hepsi'){\n      reference.get().then(async (orders)=>{ \n                  await this.loading.dismiss();\n                  orders.docs.map(order=>{ \n                    this.orders.push(<Order>{id:order.id,...order.data()})\n                  })\n                  if(orders.docs.length<=this.limit){\n                    this.startAfterDoc = orders.docs[orders.docs.length-1];\n                  }else{\n                    this.startAfterDoc = null\n                  }\n              })\n    }else{\n      reference.where('status.status','==',this.filter_status).get().then(async (orders)=>{ \n                  await this.loading.dismiss();\n                  orders.docs.map(order=>{\n                    this.orders.push(<Order>{id:order.id,...order.data()})\n                  })\n                  if(orders.docs.length<=this.limit){\n                    this.startAfterDoc = orders.docs[orders.docs.length-1];\n                  }else{\n                    this.startAfterDoc = null\n                  }\n              })\n    }\n  }\n\n  next(){ \n    this.getNextOrders();  \n  }\n\n  back(){\n    this.location.back();\n  }\n\n  getOrderPrice(order:Order){  \n    let total:number = 0;\n    order.cart_items.map((cart_item:CartItem)=>{\n      cart_item.food.orders.map((order:OrderItem)=>{\n        total += order.additional.quantity * order.additional.price\n      })\n      total   += cart_item.food.price;\n    })\n    return total;\n  }\n\n  showOrderDetails(order:Order){\n    let navigationExtras: NavigationExtras = {\n      state: { order: order, cid: this.cid }\n    };\n    this.router.navigate(['/order-details'],navigationExtras) \n  }\n\n  switchFilterCard(){\n    this.showFilterCard = !this.showFilterCard\n  }\n\n  getStatus(order:Order){\n    return this.orderStatus.getValue(order.status.status)\n  }\n}\n","export default \"ion-grid {\\n  background-color: aliceblue;\\n  border: 1px solid #e0e8f0;\\n  width: 90%;\\n  margin-top: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29yZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBQTtFQUNBLHlCQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0FBQ0oiLCJmaWxlIjoib3JkZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1ncmlke1xuICAgIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjI0LCAyMzIsIDI0MCk7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xufSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrdersPageRoutingModule } from './orders-routing.module';\n\nimport { OrdersPage } from './orders.page';\n\nimport {CurrencyPipe} from 'src/app/pipes/currency.pipe'\n\nimport {UnixTimeToDatePipe} from 'src/app/pipes/unix-time-to-date.pipe'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrdersPageRoutingModule\n  ],\n  declarations: [OrdersPage,CurrencyPipe,UnixTimeToDatePipe]\n})\nexport class OrdersPageModule {}\n","export default \"<ion-toolbar> \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-buttons (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n      </ion-buttons>\\n      <ion-title>Siparişleri</ion-title>\\n    </ion-tab-bar> \\n  </ion-tabs>\\n</ion-toolbar>\\n\\n \\n\\n\\n<ion-content>\\n\\n<!-- ///////////////////////////////// Filitre Tablosu //////////////////////////// --> \\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-toolbar >\\n          <ion-label>Flitre Uygula</ion-label>\\n          <ion-buttons slot=\\\"end\\\" (click)=\\\"switchFilterCard()\\\">\\n            <ion-icon name=\\\"filter-circle-outline\\\"></ion-icon>\\n          </ion-buttons>\\n        </ion-toolbar>\\n      </ion-col>\\n    </ion-row>\\n    <section  *ngIf=\\\"showFilterCard\\\"> \\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-label>Sipariş Durumu</ion-label> \\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-select multiple=\\\"false\\\" placeholder=\\\"Hepsi\\\"  [(ngModel)]=\\\"filter_status\\\" multiple=\\\"false\\\">\\n            <ion-select-option *ngFor=\\\"let status of orderStatus.status;\\\" [value]=\\\"status.id\\\">{{status.value}}</ion-select-option> \\n          </ion-select> \\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-label>Başlangıç Tarihi</ion-label> \\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-datetime display-format=\\\"DD MMM YYYY\\\" [(ngModel)]=\\\"filter_start_date\\\" monthShortNames=\\\"Oca,Şub,Mar,Nis,May,Haz,Tem,Ağu,Eyl,Eki,Kas,Ara\\\" doneText=\\\"Tamam\\\" cancelText=\\\"İptal\\\" picker-format=\\\"DD MMM YYYY\\\" placeholder=\\\"Başlangıç Tarihi\\\"></ion-datetime> \\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">          \\n          <ion-label>Bitiş Tarihi</ion-label> \\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-datetime display-format=\\\"DD MMM YYYY\\\"     [(ngModel)]=\\\"filter_end_date\\\" monthShortNames=\\\"Oca,Şub,Mar,Nis,May,Haz,Tem,Ağu,Eyl,Eki,Kas,Ara\\\" doneText=\\\"Tamam\\\" cancelText=\\\"İptal\\\" picker-format=\\\"DD MMM YYYY\\\"  placeholder=\\\"Bitiş Tarihi\\\"></ion-datetime> \\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-button (click)=\\\"getOrders()\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n            Uygula\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </section>\\n  </ion-grid>\\n\\n<!-- ////////////////////////////////// Sipariş Listesi //////////////////////////// --> \\n  <ion-grid fixed *ngFor=\\\"let order of orders\\\" button (click)=\\\"showOrderDetails(order)\\\">\\n    \\n      <ion-row >\\n        <ion-col size=\\\"10\\\" *ngIf=\\\"order.account\\\">\\n          {{ order.account.displayName }}\\n        </ion-col>\\n        <ion-col size=\\\"10\\\" *ngIf=\\\"order.shipping_address.name_surname_for_totable\\\">\\n          {{ order.shipping_address.name_surname_for_totable }}\\n        </ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <ion-badge  color=\\\"light\\\">{{ getOrderPrice(order) | currencyPipe }}</ion-badge>\\n        </ion-col>\\n      </ion-row>  \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label color=\\\"danger\\\" *ngIf=\\\"order.status.cancel_by_cutomer=='cancel_by_cutomer'\\\"> Müşteri siparişi iptal etti</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>\\n            Sipariş tarihi : {{ order.created_at | unixTimeToDate: 'date' }} {{ order.created_at | unixTimeToDate: 'hm' }}\\n          </ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row> \\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Sipariş Durumu {{ getStatus(order) }} - {{ order.status.created_at | unixTimeToDate: 'hm' }}</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n  </ion-grid>   \\n\\n  <ion-button (click)=\\\"next()\\\" [disabled]=\\\"!startAfterDoc\\\" expand=\\\"block\\\" fill=\\\"clear\\\">\\n    Sonraki Siparişler\\n    <ion-icon slot=\\\"start\\\" name=\\\"next-cricle\\\"></ion-icon>\\n  </ion-button> \\n</ion-content>\";"]}