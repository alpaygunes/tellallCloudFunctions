{"version":3,"sources":["./src/app/pages/edit-message-brochure/edit-message-brochure-routing.module.ts","./src/app/pages/edit-message-brochure/edit-message-brochure.page.scss","./src/app/pages/edit-message-brochure/edit-message-brochure.module.ts","./src/app/pages/edit-message-brochure/edit-message-brochure.page.html","./src/app/pages/edit-message-brochure/edit-message-brochure.page.ts"],"names":[],"mappings":"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","file":"pages-edit-message-brochure-edit-message-brochure-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditMessageBrochurePage } from './edit-message-brochure.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditMessageBrochurePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditMessageBrochurePageRoutingModule {}\n","export default \"/*\\nion-thumbnail{\\n    display: block;\\n    float: left;\\n    padding: 7px;\\n    width: 100%;\\n    height: auto;\\n    border: 1px solid #ccc;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2VkaXQtbWVzc2FnZS1icm9jaHVyZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0NBQUEiLCJmaWxlIjoiZWRpdC1tZXNzYWdlLWJyb2NodXJlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5pb24tdGh1bWJuYWlse1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmc6IDdweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4qL1xuICJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditMessageBrochurePageRoutingModule } from './edit-message-brochure-routing.module';\n\nimport { EditMessageBrochurePage } from './edit-message-brochure.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditMessageBrochurePageRoutingModule\n  ],\n  declarations: [EditMessageBrochurePage]\n})\nexport class EditMessageBrochurePageModule {}\n","export default \"<ion-toolbar > \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"back()\\\" *ngIf=\\\"showedElement == 'cat_list'\\\"> \\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon> \\n        </ion-button>\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"showedElement='cat_list'\\\" *ngIf=\\\"showedElement == 'edit_cat'\\\">\\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n        </ion-button> \\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"showedElement='cat_list'\\\" *ngIf=\\\"showedElement == 'list_page'\\\">\\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n        </ion-button>\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" (click)=\\\"showedElement='list_page'\\\" *ngIf=\\\"showedElement == 'edit_page'\\\">\\n          <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n        </ion-button> \\n        <ion-title *ngIf=\\\"showedElement == 'edit_page'\\\">Sayfa Düzenle</ion-title>\\n        <ion-title *ngIf=\\\"showedElement == 'list_page'\\\">Sayfa Listesi</ion-title>\\n        <ion-title *ngIf=\\\"showedElement == 'edit_cat'\\\">Bölüm Düzenle</ion-title>\\n        <ion-title *ngIf=\\\"showedElement == 'cat_list'\\\">Broşür Düzenle</ion-title>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ion-toolbar> \\n\\n<ion-content> \\n  <!-- //////////////////////////  BROŞÜR ADI    ///////////////////////////  -->\\n  <ion-grid fixed *ngIf=\\\"showedElement == 'cat_list'\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-label>Broşür Başlığı</ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Etkili bir başlık bulun\\\" [(ngModel)]='brochure.title'></ion-input>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-label>Alt Başlık</ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\"> \\n        <ion-input type=\\\"text\\\" [(ngModel)]='brochure.subtitle'></ion-input>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- //////////////////////////  SHOW CATEGORY LİST ///////////////////////////// --> \\n  <div *ngIf=\\\"showedElement == 'cat_list' && brochure.categories.length\\\" style=\\\"margin-top: 50px;\\\" >\\n    <ion-item lines=\\\"none\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"bookmark-outline\\\"></ion-icon>\\n      <ion-label>Bölümler</ion-label>\\n    </ion-item> \\n    <!-- sıradaki kategori-->\\n    <ion-reorder-group (ionItemReorder)=\\\"doReorderCat($event)\\\" disabled=\\\"false\\\"> \\n      <ion-item-sliding *ngFor=\\\"let categori of brochure.categories\\\">\\n        <ion-card> \\n          <ion-card-content>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>{{categori.title}}</ion-label>\\n              <ion-reorder slot=\\\"end\\\" ></ion-reorder>\\n            </ion-item> \\n          </ion-card-content>\\n          <ion-row>\\n            <ion-col size=\\\"2\\\"> \\n            </ion-col>\\n            <ion-col size=\\\"4\\\" (click)=\\\"deleteCategory(categori)\\\">\\n              <ion-icon   name=\\\"trash-outline\\\"></ion-icon> \\n            </ion-col>\\n            <ion-col size=\\\"4\\\" (click)=\\\"editCategory(categori)\\\">\\n              <ion-icon   name=\\\"create-outline\\\"></ion-icon> \\n            </ion-col>\\n            <ion-col size=\\\"2\\\"  (click)=\\\"listPage(categori)\\\">\\n              <ion-icon   name=\\\"book-outline\\\"></ion-icon> \\n            </ion-col> \\n          </ion-row>\\n        </ion-card>\\n      </ion-item-sliding>\\n    </ion-reorder-group><!-- sıradaki kategori END-->  \\n  </div>\\n  <ion-button (click)=\\\"addCategori()\\\"  fill=\\\"clear\\\" size=\\\"small\\\" expand=\\\"full\\\" *ngIf=\\\"(brochure.categories.length || showAddCategoriButtonForFirstInput) && showedElement == 'cat_list'\\\"> \\n    Bölüm Ekle\\n  </ion-button> \\n\\n\\n  <!-- //////////////////////////  EDİT CATEGORY ///////////////////////////// --> \\n  <section *ngIf=\\\"showedElement == 'edit_cat'\\\">\\n    <ion-grid fixed >\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Bölüm Başlığı</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"edited_brochure_category.title\\\" placeholder=\\\"Kategori Adı Yazın\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n  \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label>Alt Başlık</ion-label>\\n        </ion-col> \\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"edited_brochure_category.subtitle\\\"  placeholder=\\\"Alt Başlık Yazın\\\"></ion-input>\\n        </ion-col> \\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n \\n\\n  <!-- //////////////////////////  LIST PAGE ///////////////////////////// -->\\n  <section *ngIf=\\\"showedElement == 'list_page'\\\">  \\n    <ion-icon  name=\\\"book-outline\\\" style=\\\"font-size: 50px;margin-left: auto;margin-right:auto; display: block;margin-top: 50px;margin-bottom: 20px;\\\"></ion-icon>\\n    <ion-reorder-group (ionItemReorder)=\\\"doReorderPage($event)\\\" disabled=\\\"false\\\"> \\n      <ion-item-sliding *ngFor=\\\"let page of edited_brochure_category.pages\\\">\\n        <ion-item (click)=\\\"editPage(page)\\\" lines=\\\"full\\\">\\n          <ion-label>{{page.title}}</ion-label>\\n          <ion-reorder slot=\\\"end\\\"></ion-reorder>  \\n        </ion-item>\\n        <ion-item-options side=\\\"start\\\">\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"deletePage(page)\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n          </ion-item-option> \\n        </ion-item-options>\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option color=\\\"secondary\\\" (click)=\\\"editPage(page)\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"create-outline\\\"></ion-icon>\\n          </ion-item-option> \\n        </ion-item-options>\\n      </ion-item-sliding> \\n    </ion-reorder-group>      \\n    <ion-button (click)=\\\"addPage()\\\" expand=\\\"full\\\" fill=\\\"clear\\\" size=\\\"small\\\" > \\n      Sayfa Ekle\\n    </ion-button> \\n  </section> \\n \\n\\n  <!-- //////////////////////////  EDİT PAGE /////////////////////////////  -->\\n  <section *ngIf=\\\"showedElement == 'edit_page'\\\">\\n    <ion-grid fixed>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-label >Sayfa Başlığı</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row> \\n        <ion-col size=\\\"12\\\"> \\n          <ion-input type=\\\"text\\\" placeholder=\\\"Sayfa Başlığı\\\" [(ngModel)]=\\\"edited_brochure_page.title\\\"></ion-input>\\n        </ion-col>\\n      </ion-row> \\n      <ion-row>\\n        <ion-col size=\\\"12\\\"> \\n            <ion-label>Alt Başlık</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Alt Başlık\\\" [(ngModel)]=\\\"edited_brochure_page.subtitle\\\"></ion-input>\\n        </ion-col>\\n      </ion-row> \\n      <ion-row>\\n        <ion-col size=\\\"12\\\"> \\n            <ion-label position=\\\"floating\\\">Açıklama</ion-label>\\n        </ion-col>\\n      </ion-row> \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-textarea rows=\\\"15\\\" id=\\\"ag-desicription\\\" placeholder=\\\"Ürün açıklamasını yazın\\\" \\n                        [(ngModel)]=\\\"edited_brochure_page.description\\\" color=\\\"medium\\\"></ion-textarea>\\n        </ion-col>\\n      </ion-row> \\n    </ion-grid>\\n\\n    <ion-button (click)=\\\"addImage()\\\" expand=\\\"full\\\" fill=\\\"clear\\\"> \\n      Resim Ekle\\n    </ion-button>   \\n    <ion-card *ngFor=\\\"let img of edited_brochure_page.images\\\"> \\n      <ion-card-content>   \\n          <img *ngIf=\\\"img.base64data\\\" src=\\\"{{img.base64data}}\\\"/>\\n          <img *ngIf=\\\"img.url\\\" src=\\\"{{img.url}}\\\" />         \\n        <ion-button (click)=\\\"removeImage(img)\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n          Delete\\n        </ion-button>\\n      </ion-card-content> \\n    </ion-card>\\n  \\n\\n  </section>\\n\\n\\n\\n</ion-content>\\n\\n<!--    BROŞÜRE kaydet düğmesi                -->\\n<ion-button (click)=\\\"save()\\\" *ngIf=\\\"showedElement=='cat_list'\\\"   expand=\\\"full\\\"  color=\\\"primary\\\" >\\n  Broşürü Kaydet\\n</ion-button> \\n\\n\\n<!--      bölüm kaydet düğmesi                -->\\n<ion-button (click)=\\\"saveCategory()\\\" *ngIf=\\\"showedElement == 'edit_cat'\\\"  expand=\\\"full\\\" color=\\\"secondary\\\"  >\\n  Kaydet\\n</ion-button> \\n\\n<!--      sayfa kaydet düğmesi                -->\\n<ion-button (click)=\\\"savePage()\\\" *ngIf=\\\"showedElement == 'edit_page'\\\"  expand=\\\"full\\\" color=\\\"secondary\\\">\\n  Tamam\\n</ion-button> \";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'; \nimport { Location } from '@angular/common';\nimport { ItemReorderEventDetail } from '@ionic/core';\nimport { Brochure, BrochureCategory, BrochurePage, BroshurePageImage } from 'src/app/objects/brochure.model'; \nimport { MessageService } from 'src/app/services/message.service'; \nimport { Message } from 'src/app/objects/message.model'; \nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-edit-message-brochure',\n  templateUrl: './edit-message-brochure.page.html',\n  styleUrls: ['./edit-message-brochure.page.scss'],\n})\nexport class EditMessageBrochurePage implements OnInit {\n  cid: string;\n  mid: string;\n  showedElement:string='cat_list'\n  brochure:Brochure; \n  edited_brochure_category:BrochureCategory;\n  edited_brochure_page: BrochurePage; \n  message:Message;\n  imgInputElm          : HTMLInputElement;\n  showAddCategoriButtonForFirstInput:boolean = false;\n  isNew: boolean = true;\n\n  constructor(public route: ActivatedRoute,\n              public location:Location,\n              private loadingController:LoadingController,\n              public authService:AuthService,\n              private toastController:ToastController,\n              private messageService:MessageService,\n              ) { \n                this.brochure = new Brochure();\n                this.message  = new Message(); \n              }\n\n  ngOnInit() {\n    this.cid  = this.route.snapshot.paramMap.get('cid');\n    this.mid  = this.route.snapshot.paramMap.get('mid');\n    this.getMessage()\n  }\n\n  getMessage(){ \n    if(this.mid){\n      this.messageService.getMessageById(this.cid,this.mid).ref.get().then((snapshot)=>{\n        this.message  = <Message>snapshot.data()\n        this.brochure = this.message.brochure; \n        this.showAddCategoriButtonForFirstInput = snapshot.data.length ?true:false ;\n      })\n    }\n  }\n\n  back(){\n    this.location.back();\n  }\n\n  doReorderCat(ev: CustomEvent<ItemReorderEventDetail>){\n    ev.detail.complete(true)\n    this.brochure.categories.splice(ev.detail.to, 0, this.brochure.categories.splice(ev.detail.from, 1)[0]);\n\n  }\n\n  doReorderPage(ev: CustomEvent<ItemReorderEventDetail>){\n    ev.detail.complete(true)\n    this.edited_brochure_category.pages.splice(ev.detail.to, 0, this.edited_brochure_category.pages.splice(ev.detail.from, 1)[0]);\n  }\n\n  addCategori(){\n    let cat                        = new BrochureCategory()\n    cat.id                         = Math.random().toString(36).substring(7); \n    this.edited_brochure_category  = cat;\n    this.showedElement             = \"edit_cat\"\n    this.isNew = true;\n    \n  }\n\n  deleteCategory(cat:BrochureCategory){ \n    debugger\n    this.brochure.categories.forEach((v,i)=>{\n      if(v.id==cat.id){\n        cat.pages = [];\n        this.brochure.categories.splice(i, 1);\n      }\n    })\n  }\n\n  editCategory(cat:BrochureCategory){\n    this.edited_brochure_category = cat;\n    this.showedElement            = \"edit_cat\"\n    this.isNew = false;\n  }\n\n  saveCategory(){\n    debugger\n    this.showedElement = 'cat_list';\n    if(this.edited_brochure_category.title?.trim() != '' && this.edited_brochure_category.title !== undefined && this.isNew){\n      this.brochure.categories.push(this.edited_brochure_category)\n      this.save()\n    }\n    this.isNew = false; \n  }\n\n  addPage(){ \n    let page                         = new BrochurePage();\n    page.images                      = [];\n    page.id                          = Math.random().toString(36).substring(7);\n    page.catid                       = this.edited_brochure_category.id;  \n    this.edited_brochure_page        = page;\n    this.showedElement               = \"edit_page\";\n    this.isNew = true; \n  }\n\n  editPage(page:BrochurePage){\n    this.edited_brochure_page        = page;\n    this.showedElement               = \"edit_page\";\n    this.isNew = false;\n  }\n\n  savePage(){\n    if(this.edited_brochure_page.title?.trim() != '' && this.edited_brochure_page.title !== undefined && this.isNew){\n      this.edited_brochure_category.pages.push(this.edited_brochure_page)\n      this.save();\n    } \n    this.isNew = false; \n    this.showedElement = 'list_page';\n  }\n\n  listPage(cat:BrochureCategory){  \n    this.edited_brochure_category    = cat;\n    this.showedElement               = \"list_page\"\n  }\n\n  deletePage(page:BrochurePage){ \n    this.edited_brochure_category.pages.forEach((v,i)=>{\n      if(v.id==page.id){\n        this.edited_brochure_category.pages.splice(i, 1);\n      }\n    }) \n  }\n\n  addImage(){\n    let BU = this; \n    let changeHandler =function (event:any){\n      try{\n       for(let file of event.target.files) {          \n          const reader    = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload   = (revent) => {\n            const img   = new Image()\n            img.onload  = function(oimg){\n              let resizeCanvas    = document.createElement(\"canvas\");\n              var ctx             = resizeCanvas.getContext(\"2d\");\n              resizeCanvas.width  = 512;\n              resizeCanvas.height = img.height*(512/img.width);\n              ctx.drawImage(img, 0, 0, resizeCanvas.width, resizeCanvas.height); \n              const base64data  = resizeCanvas.toDataURL('image/jpeg', 0.8);\n              const pageImage   = new BroshurePageImage();\n              pageImage.id      = Math.random().toString(36).substring(20);\n              pageImage.base64data     = base64data;\n              pageImage.File    = file;\n              BU.edited_brochure_page.images.push(pageImage)\n            }\n            img.src = <string>revent.target.result\n          };\n          reader.onerror  = error => {\n            console.error(\"Resim base64 yapılamadı \" + error)\n          };\n        }        \n      }catch(err){\n        console.error(\"Resim alınırken hata oldu \" + err)\n      }\n    }\n    setTimeout(()=>{\n      this.imgInputElm       = document.createElement('input');\n      this.imgInputElm.type  = \"file\";\n      this.imgInputElm.setAttribute(\"multiple\",\"true\");\n      this.imgInputElm.setAttribute(\"accept\",\"image/*\"); \n      this.imgInputElm.addEventListener('change',changeHandler);\n      this.imgInputElm.click();\n    },1)\n  }\n\n  removeImage(img:BroshurePageImage){\n    this.edited_brochure_page.images.forEach((v,i)=>{\n      if(v.File==img.File){\n        this.edited_brochure_page.images.splice(i, 1);\n      }\n    })\n  }\n\n  async save(){ \n    const loading     = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 10000\n    }); \n    await loading.present();    \n    this.message.brochure       = this.brochure\n    this.message.type           = \"brochure\"\n    this.message.uid            = this.authService.USER.uid;\n    if(!this.mid){\n      this.message.created_at   = firebase.firestore.FieldValue.serverTimestamp();\n    }else{\n      this.message.id           = this.mid;\n    }\n     \n    this.messageService.saveBrochure(this.message,this.cid).then(async (res)=>{ \n      if(res){\n        this.mid = res.id\n      }\n      const toast = await this.toastController.create({\n        color: 'success',\n        message: \"Kayıt işlemi tamamlandı\",\n        duration: 4000\n      });\n      toast.present();\n      await loading.dismiss();\n      this.showAddCategoriButtonForFirstInput = true;\n    })\n  }\n \n}"],"sourceRoot":"webpack:///"}