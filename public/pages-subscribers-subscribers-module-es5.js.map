{"version":3,"sources":["webpack:///src/app/pages/subscribers/subscribers.page.html","webpack:///src/app/services/subscription.service.ts","webpack:///src/app/pages/subscribers/subscribers.page.scss","webpack:///src/app/pages/subscribers/subscribers.module.ts","webpack:///src/app/pages/subscribers/subscribers.page.ts","webpack:///src/app/pages/subscribers/subscribers-routing.module.ts"],"names":["SubscriptionService","fs","toastController","cid","sbscrb_id","collection","doc","update","veryfied","providedIn","SubscribersPageModule","imports","declarations","SubscribersPage","route","accountService","alertController","subscription","router","location","userService","channelService","loadingController","showed_list","start_after_docs","noNext","noBefor","limit","current_page_num","snapshot","paramMap","get","getSubscribers","cmd","start_doc","create","message","duration","loading","present","orderBy","where","startAfter","then","sbscrb","dismiss","subscribers","docs","map","data","getUserProfileImage","length","subscriber","cssClass","buttons","text","handler","unsubscribeFromChannel","uid","color","toast","filter","sbsc","alert","verify","res","getAccount","photoURL","back","selector","template","routes","path","component","SubscribersPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-subscribers-subscribers-module-es5.js","sourcesContent":["export default \"<ion-toolbar> \\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-tab-button  fill=\\\"clear\\\" size=\\\"small\\\"  (click)=\\\"back()\\\"  >\\n        <ion-icon name=\\\"chevron-back-outline\\\" ></ion-icon>\\n      </ion-tab-button> \\n      <ion-title *ngIf=\\\"showed_list\\\">Aboneler</ion-title> \\n      <ion-title *ngIf=\\\"!showed_list\\\">Onay Bekleyenler</ion-title>  \\n      <ion-tab-button (click)=\\\"router.navigate(['home'])\\\"> \\n        <ion-icon name=\\\"home\\\"></ion-icon> \\n      </ion-tab-button>  \\n    </ion-tab-bar>    \\n  </ion-tabs>\\n</ion-toolbar>  \\n\\n<ion-content> \\n\\n  <ion-row>\\n    <ion-col size=\\\"6\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"checkmark-done-circle-outline\\\"></ion-icon>\\n      <ion-button (click)=\\\"switchList(true)\\\"    fill=\\\"clear\\\" size=\\\"small\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"people-outline\\\"></ion-icon>\\n          Aboneleri Listele\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button (click)=\\\"switchList(false)\\\"     fill=\\\"clear\\\" size=\\\"small\\\"> \\n        <ion-icon slot=\\\"start\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n          Bekleyenleri Listele\\n      </ion-button>\\n    </ion-col>\\n  </ion-row> \\n\\n  <!--  /////////////////////    HEPSİ   ////////////////////////// --> \\n  <ion-list  >\\n    <ion-item *ngIf=\\\"!subscribers?.length\\\" lines=\\\"full\\\">\\n      <ion-label>Listelenecek öğe yok</ion-label>\\n    </ion-item>\\n    <div *ngFor=\\\"let subscriber of subscribers\\\">\\n      \\n      <ion-item>\\n        <ion-avatar slot=\\\"start\\\">\\n          <img [src]=\\\"subscriber.photoURL\\\" *ngIf=\\\"subscriber.photoURL\\\">\\n          <ion-icon style=\\\"font-size: 40px;\\\" name=\\\"person-circle-outline\\\" *ngIf=\\\"!subscriber.photoURL\\\"></ion-icon>\\n        </ion-avatar>\\n        <ion-label> \\n          <h2 *ngIf=\\\"subscriber.displayName\\\">{{subscriber.displayName}}</h2>\\n          <h2 *ngIf=\\\"!subscriber.displayName\\\">{{subscriber.email}}</h2>  \\n        </ion-label>\\n        <ion-button (click)=\\\"unSubscribe(subscriber)\\\" fill=\\\"clear\\\">\\n          <ion-icon  name=\\\"person-remove-outline\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button (click)=\\\"verify(subscriber)\\\" fill=\\\"clear\\\" *ngIf=\\\"subscriber.veryfied==false\\\">\\n          <ion-icon    name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n        </ion-button>\\n      </ion-item>\\n\\n\\n    </div>\\n  </ion-list>\\n\\n  <ion-row>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button (click)=\\\"getSubscribers('prev')\\\" [disabled]=\\\"noBefor\\\"   fill=\\\"clear\\\" style=\\\"position: absolute;right: 0;\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\n      </ion-button> \\n    </ion-col>\\n    <ion-col size=\\\"6\\\">    \\n      <ion-button (click)=\\\"getSubscribers('next')\\\" [disabled]=\\\"noNext\\\"  fill=\\\"clear\\\" >\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"chevron-forward-circle-outline\\\"></ion-icon>\\n      </ion-button>\\n  </ion-col>\\n  </ion-row>\\n  <!--  /////////////////////    ONAY BEKLEYENLER   ////////////////////////// -->\\n\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubscriptionService {\n\n  constructor( private fs:AngularFirestore,\n               private toastController:ToastController ) { }\n\n  verify(cid:string,sbscrb_id:string){\n    return this.fs.collection('channels').doc(cid).collection('subscribers').doc(sbscrb_id).update({veryfied:true})\n  } \n}\n","export default \"/*\\nion-content{\\n     --background: beige;  \\n} \\n*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N1YnNjcmliZXJzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztDQUFBIiwiZmlsZSI6InN1YnNjcmliZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5pb24tY29udGVudHtcbiAgICAgLS1iYWNrZ3JvdW5kOiBiZWlnZTsgIFxufSBcbiovIl19 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SubscribersPageRoutingModule } from './subscribers-routing.module';\n\nimport { SubscribersPage } from './subscribers.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SubscribersPageRoutingModule\n  ],\n  declarations: [SubscribersPage]\n})\nexport class SubscribersPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestoreDocument, DocumentData } from '@angular/fire/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';  \nimport { ChannelService } from 'src/app/services/channel.service';\nimport { SubscriptionService } from 'src/app/services/subscription.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\nimport { AccountService } from 'src/app/services/account.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-subscribers',\n  templateUrl: './subscribers.page.html',\n  styleUrls: ['./subscribers.page.scss'],\n})\nexport class SubscribersPage implements OnInit {\n  cid: string;\n  subscribers: any[];\n  showed_list: boolean = true\n  start_after_docs: DocumentData[] =[];\n  noNext: boolean   = false;\n  noBefor: boolean  = true;  \n  limit: number     = 2\n  current_page_num  = 0;\n\n  constructor(public route             : ActivatedRoute,\n              public accountService    : AccountService,\n              public alertController   : AlertController,\n              public subscription      : SubscriptionService,\n              public router            : Router,\n              public location          : Location,\n              public toastController   : ToastController,\n              public userService       : UserService,\n              public channelService    : ChannelService,\n              public loadingController : LoadingController,\n              ) { }\n\n  ngOnInit() {\n    this.cid   = this.route.snapshot.paramMap.get('cid')\n    this.getSubscribers('next')\n  }\n\n  async getSubscribers(cmd:string){\n    \n    if(cmd == 'next' &&  !this.noNext){\n      this.current_page_num++;\n    }else if(cmd == 'prev' && !this.noBefor){\n      this.current_page_num--;\n      this.noNext = false\n    }\n     \n    this.noBefor  = (this.current_page_num-1)?false:true\n    let start_doc = this.start_after_docs[this.current_page_num-1]?this.start_after_docs[this.current_page_num-1]:null\n    const loading     = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration: 5000\n    });\n    await loading.present();\n\n\n    if(start_doc){ \n      this.channelService.getSubscribers(this.cid)\n          .orderBy('created_at','desc') \n          .where('veryfied','==',this.showed_list)\n          .startAfter(start_doc)\n          .limit(this.limit)\n          .get().then(async (sbscrb)=>{\n        await loading.dismiss();\n        this.subscribers = sbscrb.docs.map(doc=>{\n          return doc.data();\n        })\n        this.getUserProfileImage();\n        this.start_after_docs[this.current_page_num] = sbscrb.docs[sbscrb.docs.length-1]; \n        if(sbscrb.docs.length < this.limit){\n          this.noNext = true\n        }\n      })\n    }else{//end if\n      this.channelService.getSubscribers(this.cid)\n          .where('veryfied','==',this.showed_list)\n          .orderBy('created_at','desc')\n          .limit(this.limit)\n          .get().then(async (sbscrb)=>{\n        await loading.dismiss();\n        this.subscribers = sbscrb.docs.map(doc=>{\n          return doc.data();\n        })\n        this.getUserProfileImage();\n        this.start_after_docs[this.current_page_num] = sbscrb.docs[sbscrb.docs.length-1]; \n        if(sbscrb.docs.length < this.limit){\n          this.noNext = true\n        }\n      })\n    }//end else\n\n\n  }\n\n  switchList(showed_list:boolean){ \n    this.showed_list      = showed_list;\n    this.current_page_num = 0;\n    this.start_after_docs = [];\n    this.noNext           = false;\n    this.noBefor          = true;\n    this.getSubscribers('next')\n  }\n\n  async unSubscribe(subscriber:any){\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class', \n      message: 'Abonolik işlemini iptal ediyorsunuz ?',\n      buttons: [{\n          text: 'Tamam',\n          handler: async () => {\n            this.userService.unsubscribeFromChannel(this.cid,subscriber.uid).then(async ()=>{\n              const toast = await this.toastController.create({\n                color: 'dark',\n                message: \"Abonelik sonlandırıldı\",\n                duration: 1000\n              });\n              toast.present();\n              this.subscribers = this.subscribers.filter(sbsc=>{\n                if (sbsc != subscriber){\n                  return sbsc;\n                }\n              })\n            })\n          }\n        }, {\n          text: 'Vazgeç',\n          handler: async () => {}\n      }]\n    });\n    await alert.present(); \n  }\n\n  verify(subscriber:any){ \n    this.subscription.verify(this.cid,subscriber.uid).then(async (res)=>{\n      const toast = await this.toastController.create({\n        color: 'success',\n        message: \"Abonelik onaylandı\",\n        duration: 1000\n      });\n      toast.present();\n      subscriber.veryfied = true;\n      this.subscribers = this.subscribers.filter(sbsc=>{\n        if (sbsc != subscriber){\n          return sbsc;\n        }\n      })\n    })\n  }\n\n  getUserProfileImage(){ \n    this.subscribers.map((subscriber)=>{ \n      this.accountService.getAccount(subscriber.uid).then((data)=>{ \n        subscriber['photoURL'] =  data.photoURL;\n      });\n    })\n  }\n\n  back(){\n    this.location.back();\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SubscribersPage } from './subscribers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SubscribersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscribersPageRoutingModule {}\n"]}