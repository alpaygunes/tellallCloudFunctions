{"version":3,"sources":["webpack:///src/app/pages/board-messages/board-messages-routing.module.ts","webpack:///src/app/pages/board-messages/board-messages.page.html","webpack:///src/app/pages/board-messages/board-messages.page.scss","webpack:///src/app/pages/board-messages/board-messages.page.ts","webpack:///src/app/pages/board-messages/board-messages.module.ts"],"names":["routes","path","component","BoardMessagesPageRoutingModule","imports","forChild","exports","BoardMessagesPage","route","router","location","toastController","messageService","loadingController","authService","channelService","board","message_not_found","show_message","types","create","message","duration","loading","present","board_id","snapshot","paramMap","get","getBoardInfo","then","chnl","dismiss","confirmation_required","checkSubscriptionVerify","verify","color","toast","navigate","announce_type","getTextMessages","getBrochureMessages","getFoodDrinkMessages","console","log","Promise","res","uid","USER","ref","sbscrtn","data","getChannelInfo","valueChanges","subscribe","idField","msgDatas","length","messages","map","msg","id","readed","getUserFeedbackIfExist","forEach","m","i","type","feedback","docs","doc","back","navigationExtras","state","selector","template","BoardMessagesPageModule","declarations"],"mappings":"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","file":"pages-board-messages-board-messages-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoardMessagesPage } from './board-messages.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardMessagesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BoardMessagesPageRoutingModule {}\n","export default \"<ion-header class=\\\"ion-no-border\\\"> \\n  <ion-toolbar> \\n    <ion-tabs>\\n      <ion-tab-bar slot=\\\"top\\\"> \\n        <ion-tab-button>\\n          <ion-menu-button></ion-menu-button>\\n        </ion-tab-button>\\n        <ion-tab-button (click)=\\\"router.navigate(['home'])\\\"> \\n          <ion-icon name=\\\"home\\\"></ion-icon> \\n        </ion-tab-button>    \\n        <ion-tab-button   (click)=\\\"router.navigate(['my-ears'])\\\">\\n          <ion-icon name=\\\"thumbs-up\\\"></ion-icon> \\n        </ion-tab-button>        \\n      </ion-tab-bar>    \\n    </ion-tabs>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div class=\\\"logo-img\\\">\\n    <img src=\\\"{{ board.logo}}\\\" /> \\n    <ion-label class=\\\"logo-title\\\" >{{ board.channel_name }}</ion-label>\\n  </div> \\n\\n  <div *ngFor=\\\"let message of messages\\\">\\n    <!-- ///////////////////////////////// FOOD DRINK MENÜLER /////////////////////// -->\\n    <ion-card  *ngIf=\\\"board?.announce_type == 'food_drink_menu'\\\"> \\n      <ion-card-header>\\n        <ion-card-subtitle >{{message.food_drink_menu.title}} </ion-card-subtitle>\\n        <ion-card-title>{{message.food_drink_menu.subtitle}} </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-icon  *ngIf=\\\"board?.announce_type == 'food_drink_menu'\\\"  name=\\\"restaurant-outline\\\"  (click) = \\\"showMessage(message)\\\" ></ion-icon>\\n      </ion-card-content>  \\n    </ion-card>\\n  \\n    <!-- ///////////////////////////////// BROŞÜR MENÜLER /////////////////////// -->\\n    <ion-card  *ngIf=\\\"board?.announce_type == 'brochure'\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle>{{message.brochure.title}} </ion-card-subtitle>\\n        <ion-card-title>{{message.brochure.subtitle}} </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-icon  class=\\\"bigger\\\" *ngIf=\\\"board?.announce_type == 'brochure'\\\" name=\\\"logo-firebase\\\" (click) = \\\"showMessage(message)\\\" ></ion-icon>\\n      </ion-card-content>\\n\\n    </ion-card>\\n\\n    <!-- /////////////////////////////////  REQULAR TEXT MESAJLAR ///////////////////////////// -->\\n    <ion-card *ngIf=\\\"board?.announce_type == 'text'\\\"  class=\\\"ag-reqular-message\\\" button (click) = \\\"showMessage(message)\\\">\\n      <ion-card-header> \\n        <ion-card-title style=\\\"font-size: 14px;\\\" color=\\\"medium\\\">{{message.created_at | unixTimeToDate: 'date'}}  {{message.created_at | unixTimeToDate: 'hm'}}</ion-card-title>\\n        <ion-icon  [src]=\\\"'assets/icon/'+types.getIconByID(message.call_back_id)\\\"></ion-icon> \\n        <ion-badge [color]=\\\"message.readed ? 'success' : 'danger'\\\" *ngIf=\\\"!message.readed\\\">Okunmadı</ion-badge>\\n      </ion-card-header>\\n      <ion-card-content style=\\\"text-align: justify;\\\">  \\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          {{message.text.substring(0,120)}}...\\n        </ion-label>\\n      </ion-card-content> \\n    </ion-card>\\n  </div>\\n\\n  <!-- NOT FOUND-->\\n  <ion-card *ngIf=\\\"message_not_found\\\">  \\n    <ion-card-header>\\n      <ion-card-subtitle>Henüz mesaj yok.</ion-card-subtitle>\\n      <ion-card-title>Güzel mesajlar gelecek...</ion-card-title>\\n    </ion-card-header> \\n  </ion-card>\\n\\n</ion-content>\\n\";","export default \"ion-card ion-icon {\\n  font-size: 100px;\\n  color: brown;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: block;\\n}\\n\\nion-card {\\n  background: #a52a2a08;\\n}\\n\\nion-card-subtitle {\\n  font-size: 24px;\\n  font-weight: bold;\\n}\\n\\n.ag-reqular-message {\\n  margin-top: 30px;\\n}\\n\\n.ag-reqular-message ion-icon {\\n  font-size: 20px;\\n  font-size: 20px;\\n  position: relative;\\n  float: right;\\n  margin-top: -15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2JvYXJkLW1lc3NhZ2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtFQUFpQixlQUFBO0VBQ2pCLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBRUoiLCJmaWxlIjoiYm9hcmQtbWVzc2FnZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQgaW9uLWljb257XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBjb2xvcjogYnJvd247XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrOyBcbn1cblxuaW9uLWNhcmR7XG4gICAgYmFja2dyb3VuZDojYTUyYTJhMDg7IFxufVxuXG5pb24tY2FyZC1zdWJ0aXRsZXtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5hZy1yZXF1bGFyLW1lc3NhZ2V7IFxuICAgIG1hcmdpbi10b3A6IDMwcHg7XG59XG5cbi5hZy1yZXF1bGFyLW1lc3NhZ2UgaW9uLWljb257XG4gICAgZm9udC1zaXplOiAyMHB4OyBmb250LXNpemU6IDIwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcbn1cbiJdfQ== */\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { MessageService } from 'src/app/services/message.service';\nimport { CallBackTypes, FeedBack, Message } from 'src/app/objects/message.model' \nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { Channel } from 'src/app/objects/channel.model';\nimport { Location } from '@angular/common';\nimport { LoadingController, ToastController } from '@ionic/angular'; \nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-board-messages',\n  templateUrl: './board-messages.page.html',\n  styleUrls: ['./board-messages.page.scss'],\n})\nexport class BoardMessagesPage implements OnInit {\n  messages: Message[];  \n  board_id:string;\n  board: Channel = new Channel();\n  loading: HTMLIonLoadingElement;\n  message_not_found : boolean = false;\n  show_message:boolean= false;  \n  types:CallBackTypes; \n\n  constructor(public route: ActivatedRoute,\n              public router: Router,\n              public location:Location, \n              private toastController:ToastController,\n              private messageService:MessageService, \n              private loadingController: LoadingController,\n              public authService:AuthService,\n              private channelService:ChannelService) { \n                this.types    = new CallBackTypes();\n              }\n\n  async ngOnInit() { \n    this.loading = await this.loadingController.create({ \n      message: 'Please wait...',\n      duration:5000\n    });\n    await this.loading.present(); \n    this.board_id   = this.route.snapshot.paramMap.get('cid')  \n    \n    this.getBoardInfo().then(async (chnl)=>{ \n      await this.loading.dismiss(); \n      this.board  = chnl\n      if(this.board.confirmation_required){ \n        const verify = await this.checkSubscriptionVerify()\n        if(!verify){       \n          const toast = await this.toastController.create({\n            color: 'danger',\n            message: \"Aboneliğiniz henüz onay aşmasında\",\n            duration: 4000\n          });\n          toast.present();\n          this.router.navigate(['my-ears'])\n          return;\n        }\n      }\n      if(this.board.announce_type == 'text'){  \n        this.getTextMessages();\n        await this.loading.dismiss();\n      }else if(this.board.announce_type == 'brochure'){\n        this.getBrochureMessages();\n      }else if(this.board.announce_type == 'food_drink_menu'){\n        this.getFoodDrinkMessages();\n      }\n    }).catch(()=>{\n      console.log(\"Kanal bilgisi alınamadı\")\n    })\n  }\n\n  async checkSubscriptionVerify(){\n    return new Promise((res)=>{\n      const uid = this.authService.USER.uid\n      this.channelService.checkSubscriptionVerify(uid,this.board_id).ref.get().then((sbscrtn)=>{ \n        if(sbscrtn.data()){\n          res(sbscrtn.data()['veryfied'])\n        }else{\n          res(false)\n        }\n      })\n    })\n  }\n\n  async getBoardInfo():Promise<Channel>{\n    return new Promise((res)=>{\n      this.channelService.getChannelInfo(this.board_id).valueChanges().subscribe(data=>{\n        res(<Channel>data)\n      });\n    })\n  }\n\n  getTextMessages(){\n    this.messageService.getTextMessages(this.board_id).valueChanges({ idField: 'id' }).subscribe(async msgDatas => {\n      await this.loading.dismiss();        \n      this.message_not_found = msgDatas.length?false:true \n      if(msgDatas.length){\n        this.messages = msgDatas.map(msg=>{ \n          return {id:msg.id,readed:true,...msg}\n        })\n      }\n      this.getUserFeedbackIfExist()\n    })\n  }\n\n  getUserFeedbackIfExist(){  \n    this.messages?.forEach((m,i)=>{ \n      if(m.type == 'text'){\n        this.messageService.getUserFeedbackIfExist(this.board_id,m.id).ref.get().then((feedback)=>{\n          if(feedback.data()){\n            m['readed'] = true\n          }else{\n            m['readed'] = false\n          } \n        })\n      }else{\n        m['readed'] = true\n      }\n    })\n  }\n\n  getBrochureMessages(){ \n    this.messageService.getBrochureMessages(this.board_id).ref.get().then( data => { \n      this.loading.dismiss(); \n      console.log(\"getBrochureMessages \"); \n      this.messages = data.docs.map(doc => {\n        return { id: doc.id,...doc.data() };\n      })\n      this.getUserFeedbackIfExist() \n    })\n  }\n\n  getFoodDrinkMessages(){ \n    this.messageService.getFoodDrinkMessages(this.board_id).ref.get().then(data => {\n      this.loading.dismiss(); \n      console.log(\"getFoodDrinkMessages aboneliği tetiklendi\");\n      this.messages = data.docs.map(doc => {\n        return {id: doc.id,...doc.data()};\n      })\n      this.getUserFeedbackIfExist() \n    })\n  }\n \n  back(){\n    this.location.back();\n  }\n\n  async showMessage(message:Message){  \n    if(message.type == 'brochure'){      \n      this.router.navigate(['/brochure/'+this.board_id+'/'+message.id])\n    }else if(message.type == 'food_drink_menu'){\n      this.router.navigate(['/food-drink-menu/'+this.board_id+'/'+message.id])\n    }else if(message.type == 'text'){ \n      let navigationExtras: NavigationExtras = {\n        state: {\n          message: message\n        }\n      };\n      this.router.navigate(['/text/'+this.board_id+'/'+message.id],navigationExtras) \n    }\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BoardMessagesPageRoutingModule } from './board-messages-routing.module';\n\nimport { BoardMessagesPage } from './board-messages.page';\n\nimport { UnixTimeToDatePipe } from 'src/app/pipes/unix-time-to-date.pipe';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BoardMessagesPageRoutingModule\n  ],\n  declarations: [BoardMessagesPage,UnixTimeToDatePipe], \n})\nexport class BoardMessagesPageModule {}\n"]}